

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Aug 11 15:58:17 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F88
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F88 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  008F                     	;# 
    92  0090                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009B                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  0105                     	;# 
   104  010C                     	;# 
   105  010D                     	;# 
   106  010E                     	;# 
   107  010F                     	;# 
   108  018C                     	;# 
   109  018D                     	;# 
   110  0000                     	;# 
   111  0001                     	;# 
   112  0002                     	;# 
   113  0003                     	;# 
   114  0004                     	;# 
   115  0005                     	;# 
   116  0006                     	;# 
   117  000A                     	;# 
   118  000B                     	;# 
   119  000C                     	;# 
   120  000D                     	;# 
   121  000E                     	;# 
   122  000E                     	;# 
   123  000F                     	;# 
   124  0010                     	;# 
   125  0011                     	;# 
   126  0012                     	;# 
   127  0013                     	;# 
   128  0014                     	;# 
   129  0015                     	;# 
   130  0015                     	;# 
   131  0016                     	;# 
   132  0017                     	;# 
   133  0018                     	;# 
   134  0019                     	;# 
   135  001A                     	;# 
   136  001E                     	;# 
   137  001F                     	;# 
   138  0081                     	;# 
   139  0085                     	;# 
   140  0086                     	;# 
   141  008C                     	;# 
   142  008D                     	;# 
   143  008E                     	;# 
   144  008F                     	;# 
   145  0090                     	;# 
   146  0092                     	;# 
   147  0093                     	;# 
   148  0094                     	;# 
   149  0098                     	;# 
   150  0099                     	;# 
   151  009B                     	;# 
   152  009C                     	;# 
   153  009D                     	;# 
   154  009E                     	;# 
   155  009F                     	;# 
   156  0105                     	;# 
   157  010C                     	;# 
   158  010D                     	;# 
   159  010E                     	;# 
   160  010F                     	;# 
   161  018C                     	;# 
   162  018D                     	;# 
   163  0006                     _PORTBbits	set	6
   164  0005                     _PORTAbits	set	5
   165  000B                     _INTCONbits	set	11
   166  0006                     _PORTB	set	6
   167  0005                     _PORTA	set	5
   168  0032                     _RB2	set	50
   169  0031                     _RB1	set	49
   170  0036                     _RB6	set	54
   171  0035                     _RB5	set	53
   172  0034                     _RB4	set	52
   173  0033                     _RB3	set	51
   174  0081                     _OPTION_REGbits	set	129
   175  0086                     _TRISBbits	set	134
   176  0085                     _TRISAbits	set	133
   177  009B                     _ANSEL	set	155
   178  008F                     _OSCCONbits	set	143
   179                           
   180                           	psect	strings
   181  0002                     __pstrings:
   182  0002                     stringtab:
   183  0002                     __stringtab:
   184  0002                     stringcode:	
   185                           ;	String table - string pointers are 1 byte each
   186                           
   187  0002                     stringdir:
   188  0002  3000               	movlw	high stringdir
   189  0003  008A               	movwf	10
   190  0004  0804               	movf	4,w
   191  0005  0A84               	incf	4,f
   192  0006  0782               	addwf	2,f
   193  0007                     __stringbase:
   194  0007  3400               	retlw	0
   195  0008                     __end_of__stringtab:
   196  0008                     STR_1:
   197  0008  3448               	retlw	72	;'H'
   198  0009  346F               	retlw	111	;'o'
   199  000A  346C               	retlw	108	;'l'
   200  000B  3461               	retlw	97	;'a'
   201  000C  3420               	retlw	32	;' '
   202  000D  344D               	retlw	77	;'M'
   203  000E  3475               	retlw	117	;'u'
   204  000F  346E               	retlw	110	;'n'
   205  0010  3464               	retlw	100	;'d'
   206  0011  346F               	retlw	111	;'o'
   207  0012  3400               	retlw	0
   208  0013                     STR_2:
   209  0013  3453               	retlw	83	;'S'
   210  0014  346F               	retlw	111	;'o'
   211  0015  3479               	retlw	121	;'y'
   212  0016  3420               	retlw	32	;' '
   213  0017  344D               	retlw	77	;'M'
   214  0018  3461               	retlw	97	;'a'
   215  0019  3474               	retlw	116	;'t'
   216  001A  3469               	retlw	105	;'i'
   217  001B  3461               	retlw	97	;'a'
   218  001C  3473               	retlw	115	;'s'
   219  001D  3400               	retlw	0
   220                           
   221                           	psect	cinit
   222  07F6                     start_initialization:	
   223                           ; #config settings
   224                           
   225  07F6                     __initialization:
   226                           
   227                           ; Clear objects allocated to BANK0
   228  07F6  1283               	bcf	3,5	;RP0=0, select bank0
   229  07F7  1303               	bcf	3,6	;RP1=0, select bank0
   230  07F8  01A0               	clrf	__pbssBANK0& (0+127)
   231  07F9  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   232  07FA  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   233  07FB  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   234  07FC  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   235  07FD                     end_of_initialization:	
   236                           ;End of C runtime variable initialization code
   237                           
   238  07FD                     __end_of__initialization:
   239  07FD  0183               	clrf	3
   240  07FE  118A  2F06         	ljmp	_main	;jump to C main() function
   241                           
   242                           	psect	bssBANK0
   243  0020                     __pbssBANK0:
   244  0020                     _CountSteps:
   245  0020                     	ds	2
   246  0022                     _AutMan:
   247  0022                     	ds	2
   248  0024                     _FotoCelula:
   249  0024                     	ds	1
   250                           
   251                           	psect	cstackCOMMON
   252  0070                     __pcstackCOMMON:
   253  0070                     ?_Lcd_Port:
   254  0070                     ??_Lcd_Port:	
   255                           ; 1 bytes @ 0x0
   256                           
   257  0070                     ?_Lcd_Cmd:	
   258                           ; 1 bytes @ 0x0
   259                           
   260  0070                     ?_Lcd_Clear:	
   261                           ; 1 bytes @ 0x0
   262                           
   263  0070                     ?_Lcd_Init:	
   264                           ; 1 bytes @ 0x0
   265                           
   266  0070                     ?_Lcd_Write_Char:	
   267                           ; 1 bytes @ 0x0
   268                           
   269  0070                     ?_Lcd_Write_String:	
   270                           ; 1 bytes @ 0x0
   271                           
   272  0070                     ?_ConfigOscillator:	
   273                           ; 1 bytes @ 0x0
   274                           
   275  0070                     ??_ConfigOscillator:	
   276                           ; 1 bytes @ 0x0
   277                           
   278  0070                     ?_ConfigPorts:	
   279                           ; 1 bytes @ 0x0
   280                           
   281  0070                     ??_ConfigPorts:	
   282                           ; 1 bytes @ 0x0
   283                           
   284  0070                     ?_Retardo:	
   285                           ; 1 bytes @ 0x0
   286                           
   287  0070                     ??_Retardo:	
   288                           ; 1 bytes @ 0x0
   289                           
   290  0070                     ?_main:	
   291                           ; 1 bytes @ 0x0
   292                           
   293  0070                     Lcd_Port@a:	
   294                           ; 1 bytes @ 0x0
   295                           
   296                           
   297                           ; 1 bytes @ 0x0
   298  0070                     	ds	1
   299  0071                     ??_Lcd_Cmd:
   300  0071                     ??_Lcd_Write_Char:	
   301                           ; 1 bytes @ 0x1
   302                           
   303                           
   304                           ; 1 bytes @ 0x1
   305  0071                     	ds	1
   306  0072                     Lcd_Write_Char@temp:
   307                           
   308                           ; 1 bytes @ 0x2
   309  0072                     	ds	1
   310  0073                     Lcd_Cmd@a:
   311  0073                     Lcd_Write_Char@y:	
   312                           ; 1 bytes @ 0x3
   313                           
   314                           
   315                           ; 1 bytes @ 0x3
   316  0073                     	ds	1
   317  0074                     ??_Lcd_Clear:
   318  0074                     ?_Lcd_Set_Cursor:	
   319                           ; 1 bytes @ 0x4
   320                           
   321  0074                     ??_Lcd_Init:	
   322                           ; 1 bytes @ 0x4
   323                           
   324  0074                     Lcd_Set_Cursor@a:	
   325                           ; 1 bytes @ 0x4
   326                           
   327  0074                     Lcd_Write_Char@a:	
   328                           ; 1 bytes @ 0x4
   329                           
   330                           
   331                           ; 1 bytes @ 0x4
   332  0074                     	ds	1
   333  0075                     ??_Lcd_Set_Cursor:
   334  0075                     ??_Lcd_Write_String:	
   335                           ; 1 bytes @ 0x5
   336                           
   337  0075                     Lcd_Write_String@i:	
   338                           ; 1 bytes @ 0x5
   339                           
   340                           
   341                           ; 2 bytes @ 0x5
   342  0075                     	ds	2
   343  0077                     Lcd_Set_Cursor@b:
   344  0077                     Lcd_Write_String@a:	
   345                           ; 1 bytes @ 0x7
   346                           
   347                           
   348                           ; 1 bytes @ 0x7
   349  0077                     	ds	1
   350  0078                     Lcd_Set_Cursor@z:
   351                           
   352                           ; 1 bytes @ 0x8
   353  0078                     	ds	1
   354  0079                     Lcd_Set_Cursor@y:
   355                           
   356                           ; 1 bytes @ 0x9
   357  0079                     	ds	1
   358  007A                     Lcd_Set_Cursor@temp:
   359                           
   360                           ; 1 bytes @ 0xA
   361  007A                     	ds	1
   362  007B                     ??_main:
   363                           
   364                           ; 1 bytes @ 0xB
   365  007B                     	ds	3
   366                           
   367                           	psect	cstackBANK0
   368  0025                     __pcstackBANK0:
   369  0025                     main@Steps:
   370                           
   371                           ; 2 bytes @ 0x0
   372  0025                     	ds	2
   373  0027                     main@Count:
   374                           
   375                           ; 2 bytes @ 0x2
   376  0027                     	ds	2
   377                           
   378                           	psect	maintext
   379  0706                     __pmaintext:	
   380 ;;
   381 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   382 ;;
   383 ;; *************** function _main *****************
   384 ;; Defined at:
   385 ;;		line 111 in file "main.c"
   386 ;; Parameters:    Size  Location     Type
   387 ;;		None
   388 ;; Auto vars:     Size  Location     Type
   389 ;;  Count           2    2[BANK0 ] int 
   390 ;;  Steps           2    0[BANK0 ] int 
   391 ;; Return value:  Size  Location     Type
   392 ;;                  1    wreg      void 
   393 ;; Registers used:
   394 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   395 ;; Tracked objects:
   396 ;;		On entry : B00/0
   397 ;;		On exit  : 0/0
   398 ;;		Unchanged: 0/0
   399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   400 ;;      Params:         0       0       0       0       0
   401 ;;      Locals:         0       4       0       0       0
   402 ;;      Temps:          3       0       0       0       0
   403 ;;      Totals:         3       4       0       0       0
   404 ;;Total ram usage:        7 bytes
   405 ;; Hardware stack levels required when called: 3
   406 ;; This function calls:
   407 ;;		_ConfigOscillator
   408 ;;		_ConfigPorts
   409 ;;		_Lcd_Clear
   410 ;;		_Lcd_Init
   411 ;;		_Lcd_Set_Cursor
   412 ;;		_Lcd_Write_String
   413 ;;		_Retardo
   414 ;; This function is called by:
   415 ;;		Startup code after reset
   416 ;; This function uses a non-reentrant model
   417 ;;
   418                           
   419                           
   420                           ;psect for function _main
   421  0706                     _main:
   422  0706                     l1104:	
   423                           ;incstack = 0
   424                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   425                           
   426                           
   427                           ;main.c: 114:     int Count = 0;
   428  0706  1283               	bcf	3,5	;RP0=0, select bank0
   429  0707  1303               	bcf	3,6	;RP1=0, select bank0
   430  0708  01A7               	clrf	main@Count
   431  0709  01A8               	clrf	main@Count+1
   432  070A                     l1106:
   433                           
   434                           ;main.c: 115:     int Steps = 5;
   435  070A  3005               	movlw	5
   436  070B  00A5               	movwf	main@Steps
   437  070C  3000               	movlw	0
   438  070D  00A6               	movwf	main@Steps+1
   439  070E                     l1108:
   440                           
   441                           ;main.c: 118:     ConfigOscillator();
   442  070E  118A  256B  118A   	fcall	_ConfigOscillator
   443  0711                     l1110:
   444                           
   445                           ;main.c: 119:     ConfigPorts();
   446  0711  118A  259D  118A   	fcall	_ConfigPorts
   447  0714                     l1112:
   448                           
   449                           ;main.c: 120:     Lcd_Init();
   450  0714  118A  262D  118A   	fcall	_Lcd_Init
   451  0717                     l1114:
   452                           
   453                           ;main.c: 121:     Lcd_Clear();
   454  0717  118A  2572  118A   	fcall	_Lcd_Clear
   455  071A                     l1116:
   456                           
   457                           ;main.c: 124:     Lcd_Set_Cursor(1,1);
   458  071A  01F4               	clrf	Lcd_Set_Cursor@a
   459  071B  0AF4               	incf	Lcd_Set_Cursor@a,f
   460  071C  3001               	movlw	1
   461  071D  118A  2671  118A   	fcall	_Lcd_Set_Cursor
   462  0720                     l1118:
   463                           
   464                           ;main.c: 125:     Lcd_Write_String("Hola Mundo");
   465  0720  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   466  0721  118A  25B7  118A   	fcall	_Lcd_Write_String
   467  0724                     l1120:
   468                           
   469                           ;main.c: 126:     _delay((unsigned long)((100)*(2000000/4000.0)));
   470  0724  3041               	movlw	65
   471  0725  00FC               	movwf	??_main+1
   472  0726  30EE               	movlw	238
   473  0727  00FB               	movwf	??_main
   474  0728                     u537:
   475  0728  0BFB               	decfsz	??_main,f
   476  0729  2F28               	goto	u537
   477  072A  0BFC               	decfsz	??_main+1,f
   478  072B  2F28               	goto	u537
   479  072C  0000               	nop
   480  072D                     l1122:
   481                           
   482                           ;main.c: 127:     Lcd_Set_Cursor(1,2);
   483  072D  3002               	movlw	2
   484  072E  00FB               	movwf	??_main
   485  072F  087B               	movf	??_main,w
   486  0730  00F4               	movwf	Lcd_Set_Cursor@a
   487  0731  3001               	movlw	1
   488  0732  118A  2671  118A   	fcall	_Lcd_Set_Cursor
   489  0735                     l1124:
   490                           
   491                           ;main.c: 128:     Lcd_Write_String("Soy Matias");
   492  0735  300C               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   493  0736  118A  25B7  118A   	fcall	_Lcd_Write_String
   494  0739                     l1126:
   495                           
   496                           ;main.c: 129:     _delay((unsigned long)((1000)*(2000000/4000.0)));
   497  0739  3003               	movlw	3
   498  073A  00FD               	movwf	??_main+2
   499  073B  308A               	movlw	138
   500  073C  00FC               	movwf	??_main+1
   501  073D  3055               	movlw	85
   502  073E  00FB               	movwf	??_main
   503  073F                     u547:
   504  073F  0BFB               	decfsz	??_main,f
   505  0740  2F3F               	goto	u547
   506  0741  0BFC               	decfsz	??_main+1,f
   507  0742  2F3F               	goto	u547
   508  0743  0BFD               	decfsz	??_main+2,f
   509  0744  2F3F               	goto	u547
   510  0745  2F46               	nop2
   511  0746                     l1128:
   512                           
   513                           ;main.c: 132:     INTCONbits.GIE = 1;
   514  0746  178B               	bsf	11,7	;volatile
   515  0747                     l1130:
   516                           
   517                           ;main.c: 134:     OPTION_REGbits.INTEDG = 0;
   518  0747  1683               	bsf	3,5	;RP0=1, select bank1
   519  0748  1303               	bcf	3,6	;RP1=0, select bank1
   520  0749  1301               	bcf	1,6	;volatile
   521  074A                     l1132:
   522                           
   523                           ;main.c: 135:     INTCONbits.INTF = 0;
   524  074A  108B               	bcf	11,1	;volatile
   525  074B                     l1134:
   526                           
   527                           ;main.c: 136:     INTCONbits.INTE = 0;
   528  074B  120B               	bcf	11,4	;volatile
   529  074C                     l1136:
   530                           
   531                           ;main.c: 138:     INTCONbits.RBIF = 0;
   532  074C  100B               	bcf	11,0	;volatile
   533  074D                     l1138:
   534                           
   535                           ;main.c: 139:     INTCONbits.RBIE = 0;
   536  074D  118B               	bcf	11,3	;volatile
   537  074E                     l1140:
   538                           
   539                           ;main.c: 143:     {;main.c: 144:         if(PORTAbits.RA0 == 1)
   540  074E  1283               	bcf	3,5	;RP0=0, select bank0
   541  074F  1303               	bcf	3,6	;RP1=0, select bank0
   542  0750  1C05               	btfss	5,0	;volatile
   543  0751  2F53               	goto	u431
   544  0752  2F54               	goto	u430
   545  0753                     u431:
   546  0753  2F99               	goto	l1168
   547  0754                     u430:
   548  0754                     l1142:
   549                           
   550                           ;main.c: 145:         {;main.c: 146:             AutMan = 1;
   551  0754  3001               	movlw	1
   552  0755  00A2               	movwf	_AutMan
   553  0756  3000               	movlw	0
   554  0757  00A3               	movwf	_AutMan+1
   555  0758                     l1144:
   556                           
   557                           ;main.c: 147:             INTCONbits.RBIE = 1;
   558  0758  158B               	bsf	11,3	;volatile
   559  0759                     l1146:
   560                           
   561                           ;main.c: 148:             if(FotoCelula == 1 || PORTBbits.RB7 == 1)
   562  0759  0324               	decf	_FotoCelula,w
   563  075A  1903               	btfsc	3,2
   564  075B  2F5D               	goto	u441
   565  075C  2F5E               	goto	u440
   566  075D                     u441:
   567  075D  2F62               	goto	l108
   568  075E                     u440:
   569  075E                     l1148:
   570  075E  1F86               	btfss	6,7	;volatile
   571  075F  2F61               	goto	u451
   572  0760  2F62               	goto	u450
   573  0761                     u451:
   574  0761  2F4E               	goto	l1140
   575  0762                     u450:
   576  0762                     l108:
   577                           
   578                           ;main.c: 149:             {;main.c: 150:                 if(PORTAbits.RA1 == 1)
   579  0762  1C85               	btfss	5,1	;volatile
   580  0763  2F65               	goto	u461
   581  0764  2F66               	goto	u460
   582  0765                     u461:
   583  0765  2F82               	goto	l109
   584  0766                     u460:
   585  0766                     l1150:
   586                           
   587                           ;main.c: 151:                 {;main.c: 152:                     PORTAbits.RA2 = 0;
   588  0766  1105               	bcf	5,2	;volatile
   589                           
   590                           ;main.c: 153:                     PORTAbits.RA4 = 1;
   591  0767  1605               	bsf	5,4	;volatile
   592                           
   593                           ;main.c: 154:                     INTCONbits.INTE = 1;
   594  0768  160B               	bsf	11,4	;volatile
   595  0769                     l1152:
   596                           
   597                           ;main.c: 155:                     if(CountSteps >= Steps)
   598  0769  0821               	movf	_CountSteps+1,w
   599  076A  3A80               	xorlw	128
   600  076B  00FB               	movwf	??_main
   601  076C  0826               	movf	main@Steps+1,w
   602  076D  3A80               	xorlw	128
   603  076E  027B               	subwf	??_main,w
   604  076F  1D03               	skipz
   605  0770  2F73               	goto	u475
   606  0771  0825               	movf	main@Steps,w
   607  0772  0220               	subwf	_CountSteps,w
   608  0773                     u475:
   609  0773  1C03               	skipc
   610  0774  2F76               	goto	u471
   611  0775  2F77               	goto	u470
   612  0776                     u471:
   613  0776  2FF3               	goto	l113
   614  0777                     u470:
   615  0777                     l1154:
   616                           
   617                           ;main.c: 156:                     {;main.c: 157:                         PORTAbits.RA4 =
      +                           0;
   618  0777  1283               	bcf	3,5	;RP0=0, select bank0
   619  0778  1303               	bcf	3,6	;RP1=0, select bank0
   620  0779  1205               	bcf	5,4	;volatile
   621                           
   622                           ;main.c: 158:                         PORTAbits.RA2 = 0;
   623  077A  1105               	bcf	5,2	;volatile
   624                           
   625                           ;main.c: 159:                         INTCONbits.INTE = 0;
   626  077B  120B               	bcf	11,4	;volatile
   627  077C                     l1156:
   628                           
   629                           ;main.c: 160:                         CountSteps = 0;
   630  077C  01A0               	clrf	_CountSteps
   631  077D  01A1               	clrf	_CountSteps+1
   632  077E                     l1158:
   633                           
   634                           ;main.c: 161:                         Retardo();
   635  077E  118A  257B  118A   	fcall	_Retardo
   636  0781  2F4E               	goto	l1140
   637  0782                     l109:	
   638                           ;main.c: 164:                 else
   639                           
   640                           
   641                           ;main.c: 165:                 {;main.c: 166:                     PORTAbits.RA4 = 0;
   642  0782  1205               	bcf	5,4	;volatile
   643                           
   644                           ;main.c: 167:                     PORTAbits.RA2 = 1;
   645  0783  1505               	bsf	5,2	;volatile
   646                           
   647                           ;main.c: 168:                     INTCONbits.INTE = 1;
   648  0784  160B               	bsf	11,4	;volatile
   649  0785                     l1160:
   650                           
   651                           ;main.c: 169:                     if(CountSteps >= Steps)
   652  0785  0821               	movf	_CountSteps+1,w
   653  0786  3A80               	xorlw	128
   654  0787  00FB               	movwf	??_main
   655  0788  0826               	movf	main@Steps+1,w
   656  0789  3A80               	xorlw	128
   657  078A  027B               	subwf	??_main,w
   658  078B  1D03               	skipz
   659  078C  2F8F               	goto	u485
   660  078D  0825               	movf	main@Steps,w
   661  078E  0220               	subwf	_CountSteps,w
   662  078F                     u485:
   663  078F  1C03               	skipc
   664  0790  2F92               	goto	u481
   665  0791  2F93               	goto	u480
   666  0792                     u481:
   667  0792  2FF3               	goto	l113
   668  0793                     u480:
   669  0793                     l1162:
   670                           
   671                           ;main.c: 170:                     {;main.c: 171:                         PORTAbits.RA4 =
      +                           0;
   672  0793  1283               	bcf	3,5	;RP0=0, select bank0
   673  0794  1303               	bcf	3,6	;RP1=0, select bank0
   674  0795  1205               	bcf	5,4	;volatile
   675                           
   676                           ;main.c: 172:                         PORTAbits.RA2 = 0;
   677  0796  1105               	bcf	5,2	;volatile
   678                           
   679                           ;main.c: 173:                         INTCONbits.INTE = 0;
   680  0797  120B               	bcf	11,4	;volatile
   681  0798  2F7C               	goto	l1156
   682  0799                     l1168:
   683                           
   684                           ;main.c: 183:         {;main.c: 184:             AutMan = 0;
   685  0799  01A2               	clrf	_AutMan
   686  079A  01A3               	clrf	_AutMan+1
   687  079B                     l1170:
   688                           
   689                           ;main.c: 185:             INTCONbits.RBIE = 0;
   690  079B  118B               	bcf	11,3	;volatile
   691  079C                     l1172:
   692                           
   693                           ;main.c: 187:             if(PORTAbits.RA6 == 1)
   694  079C  1F05               	btfss	5,6	;volatile
   695  079D  2F9F               	goto	u491
   696  079E  2FA0               	goto	u490
   697  079F                     u491:
   698  079F  2FC5               	goto	l114
   699  07A0                     u490:
   700  07A0                     l1174:
   701                           
   702                           ;main.c: 188:             {;main.c: 189:                 _delay((unsigned long)((20)*(20
      +                          00000/4000.0)));
   703  07A0  300D               	movlw	13
   704  07A1  00FC               	movwf	??_main+1
   705  07A2  30FB               	movlw	251
   706  07A3  00FB               	movwf	??_main
   707  07A4                     u557:
   708  07A4  0BFB               	decfsz	??_main,f
   709  07A5  2FA4               	goto	u557
   710  07A6  0BFC               	decfsz	??_main+1,f
   711  07A7  2FA4               	goto	u557
   712  07A8  2FA9               	nop2
   713                           
   714                           ;main.c: 190:                 Count ++;
   715  07A9  3001               	movlw	1
   716  07AA  1283               	bcf	3,5	;RP0=0, select bank0
   717  07AB  1303               	bcf	3,6	;RP1=0, select bank0
   718  07AC  07A7               	addwf	main@Count,f
   719  07AD  1803               	skipnc
   720  07AE  0AA8               	incf	main@Count+1,f
   721  07AF  3000               	movlw	0
   722  07B0  07A8               	addwf	main@Count+1,f
   723  07B1                     l1176:
   724                           
   725                           ;main.c: 191:                 if(Count >= 5)
   726  07B1  0828               	movf	main@Count+1,w
   727  07B2  3A80               	xorlw	128
   728  07B3  00FF               	movwf	btemp+1
   729  07B4  3080               	movlw	128
   730  07B5  027F               	subwf	btemp+1,w
   731  07B6  1D03               	skipz
   732  07B7  2FBA               	goto	u505
   733  07B8  3005               	movlw	5
   734  07B9  0227               	subwf	main@Count,w
   735  07BA                     u505:
   736  07BA  1C03               	skipc
   737  07BB  2FBD               	goto	u501
   738  07BC  2FBE               	goto	u500
   739  07BD                     u501:
   740  07BD  2FC6               	goto	l116
   741  07BE                     u500:
   742  07BE                     l1178:
   743                           
   744                           ;main.c: 192:                 {;main.c: 193:                     Count = 0;
   745  07BE  1283               	bcf	3,5	;RP0=0, select bank0
   746  07BF  1303               	bcf	3,6	;RP1=0, select bank0
   747  07C0  01A7               	clrf	main@Count
   748  07C1  01A8               	clrf	main@Count+1
   749  07C2                     l1180:
   750                           
   751                           ;main.c: 194:                     PORTAbits.RA2 = 0;
   752  07C2  1105               	bcf	5,2	;volatile
   753  07C3                     l1182:
   754                           
   755                           ;main.c: 195:                     PORTAbits.RA4 = 1;
   756  07C3  1605               	bsf	5,4	;volatile
   757  07C4  2FC6               	goto	l116
   758  07C5                     l114:	
   759                           ;main.c: 199:             else{PORTAbits.RA4 = 0;
   760                           
   761  07C5  1205               	bcf	5,4	;volatile
   762  07C6                     l116:	
   763                           ;main.c: 200:             }
   764                           
   765                           
   766                           ;main.c: 202:             if(PORTAbits.RA5 == 1)
   767  07C6  1283               	bcf	3,5	;RP0=0, select bank0
   768  07C7  1303               	bcf	3,6	;RP1=0, select bank0
   769  07C8  1E85               	btfss	5,5	;volatile
   770  07C9  2FCB               	goto	u511
   771  07CA  2FCC               	goto	u510
   772  07CB                     u511:
   773  07CB  2FF1               	goto	l117
   774  07CC                     u510:
   775  07CC                     l1184:
   776                           
   777                           ;main.c: 203:             {;main.c: 204:                 _delay((unsigned long)((20)*(20
      +                          00000/4000.0)));
   778  07CC  300D               	movlw	13
   779  07CD  00FC               	movwf	??_main+1
   780  07CE  30FB               	movlw	251
   781  07CF  00FB               	movwf	??_main
   782  07D0                     u567:
   783  07D0  0BFB               	decfsz	??_main,f
   784  07D1  2FD0               	goto	u567
   785  07D2  0BFC               	decfsz	??_main+1,f
   786  07D3  2FD0               	goto	u567
   787  07D4  2FD5               	nop2
   788                           
   789                           ;main.c: 205:                 Count ++;
   790  07D5  3001               	movlw	1
   791  07D6  1283               	bcf	3,5	;RP0=0, select bank0
   792  07D7  1303               	bcf	3,6	;RP1=0, select bank0
   793  07D8  07A7               	addwf	main@Count,f
   794  07D9  1803               	skipnc
   795  07DA  0AA8               	incf	main@Count+1,f
   796  07DB  3000               	movlw	0
   797  07DC  07A8               	addwf	main@Count+1,f
   798  07DD                     l1186:
   799                           
   800                           ;main.c: 206:                 if(Count >= 5)
   801  07DD  0828               	movf	main@Count+1,w
   802  07DE  3A80               	xorlw	128
   803  07DF  00FF               	movwf	btemp+1
   804  07E0  3080               	movlw	128
   805  07E1  027F               	subwf	btemp+1,w
   806  07E2  1D03               	skipz
   807  07E3  2FE6               	goto	u525
   808  07E4  3005               	movlw	5
   809  07E5  0227               	subwf	main@Count,w
   810  07E6                     u525:
   811  07E6  1C03               	skipc
   812  07E7  2FE9               	goto	u521
   813  07E8  2FEA               	goto	u520
   814  07E9                     u521:
   815  07E9  2FF3               	goto	l113
   816  07EA                     u520:
   817  07EA                     l1188:
   818                           
   819                           ;main.c: 207:                 {;main.c: 208:                     Count = 0;
   820  07EA  1283               	bcf	3,5	;RP0=0, select bank0
   821  07EB  1303               	bcf	3,6	;RP1=0, select bank0
   822  07EC  01A7               	clrf	main@Count
   823  07ED  01A8               	clrf	main@Count+1
   824  07EE                     l1190:
   825                           
   826                           ;main.c: 209:                     PORTAbits.RA4 = 0;
   827  07EE  1205               	bcf	5,4	;volatile
   828  07EF                     l1192:
   829                           
   830                           ;main.c: 210:                     PORTAbits.RA2 = 1;
   831  07EF  1505               	bsf	5,2	;volatile
   832  07F0  2F4E               	goto	l1140
   833  07F1                     l117:	
   834                           ;main.c: 213:             else
   835                           
   836                           
   837                           ;main.c: 214:             {;main.c: 215:                 PORTAbits.RA2 = 0;
   838  07F1  1105               	bcf	5,2	;volatile
   839  07F2  2F4E               	goto	l1140
   840  07F3                     l113:	
   841                           ;main.c: 217:         }
   842                           
   843  07F3  2F4E               	goto	l1140
   844  07F4  118A  2800         	ljmp	start
   845  07F6                     __end_of_main:
   846                           
   847                           	psect	text1
   848  057B                     __ptext1:	
   849 ;; *************** function _Retardo *****************
   850 ;; Defined at:
   851 ;;		line 104 in file "main.c"
   852 ;; Parameters:    Size  Location     Type
   853 ;;		None
   854 ;; Auto vars:     Size  Location     Type
   855 ;;		None
   856 ;; Return value:  Size  Location     Type
   857 ;;                  1    wreg      void 
   858 ;; Registers used:
   859 ;;		wreg
   860 ;; Tracked objects:
   861 ;;		On entry : 0/0
   862 ;;		On exit  : 0/0
   863 ;;		Unchanged: 0/0
   864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   865 ;;      Params:         0       0       0       0       0
   866 ;;      Locals:         0       0       0       0       0
   867 ;;      Temps:          2       0       0       0       0
   868 ;;      Totals:         2       0       0       0       0
   869 ;;Total ram usage:        2 bytes
   870 ;; Hardware stack levels used: 1
   871 ;; This function calls:
   872 ;;		Nothing
   873 ;; This function is called by:
   874 ;;		_main
   875 ;; This function uses a non-reentrant model
   876 ;;
   877                           
   878                           
   879                           ;psect for function _Retardo
   880  057B                     _Retardo:
   881  057B                     l1090:	
   882                           ;incstack = 0
   883                           ; Regs used in _Retardo: [wreg]
   884                           
   885                           
   886                           ;main.c: 106:     _delay((unsigned long)((100)*(2000000/4000.0)));
   887  057B  3041               	movlw	65
   888  057C  00F1               	movwf	??_Retardo+1
   889  057D  30EE               	movlw	238
   890  057E  00F0               	movwf	??_Retardo
   891  057F                     u577:
   892  057F  0BF0               	decfsz	??_Retardo,f
   893  0580  2D7F               	goto	u577
   894  0581  0BF1               	decfsz	??_Retardo+1,f
   895  0582  2D7F               	goto	u577
   896  0583  0000               	nop
   897  0584                     l99:
   898  0584  0008               	return
   899  0585                     __end_of_Retardo:
   900                           
   901                           	psect	text2
   902  05B7                     __ptext2:	
   903 ;; *************** function _Lcd_Write_String *****************
   904 ;; Defined at:
   905 ;;		line 195 in file "./lcd_16x4.h"
   906 ;; Parameters:    Size  Location     Type
   907 ;;  a               1    wreg     PTR unsigned char 
   908 ;;		 -> STR_2(11), STR_1(11), 
   909 ;; Auto vars:     Size  Location     Type
   910 ;;  a               1    7[COMMON] PTR unsigned char 
   911 ;;		 -> STR_2(11), STR_1(11), 
   912 ;;  i               2    5[COMMON] int 
   913 ;; Return value:  Size  Location     Type
   914 ;;                  1    wreg      void 
   915 ;; Registers used:
   916 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   917 ;; Tracked objects:
   918 ;;		On entry : 0/0
   919 ;;		On exit  : 0/0
   920 ;;		Unchanged: 0/0
   921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   922 ;;      Params:         0       0       0       0       0
   923 ;;      Locals:         3       0       0       0       0
   924 ;;      Temps:          0       0       0       0       0
   925 ;;      Totals:         3       0       0       0       0
   926 ;;Total ram usage:        3 bytes
   927 ;; Hardware stack levels used: 1
   928 ;; Hardware stack levels required when called: 2
   929 ;; This function calls:
   930 ;;		_Lcd_Write_Char
   931 ;; This function is called by:
   932 ;;		_main
   933 ;; This function uses a non-reentrant model
   934 ;;
   935                           
   936                           
   937                           ;psect for function _Lcd_Write_String
   938  05B7                     _Lcd_Write_String:
   939                           
   940                           ;incstack = 0
   941                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   942                           ;Lcd_Write_String@a stored from wreg
   943  05B7  00F7               	movwf	Lcd_Write_String@a
   944  05B8                     l1046:
   945                           
   946                           ;./lcd_16x4.h: 195: void Lcd_Write_String(char *a);./lcd_16x4.h: 196: {;./lcd_16x4.h: 19
      +                          7:  int i;;./lcd_16x4.h: 198:  for(i=0;a[i]!='\0';i++)
   947  05B8  01F5               	clrf	Lcd_Write_String@i
   948  05B9  01F6               	clrf	Lcd_Write_String@i+1
   949  05BA  2DCA               	goto	l1052
   950  05BB                     l1048:
   951                           
   952                           ;./lcd_16x4.h: 199:     Lcd_Write_Char(a[i]);
   953  05BB  0875               	movf	Lcd_Write_String@i,w
   954  05BC  0777               	addwf	Lcd_Write_String@a,w
   955  05BD  0084               	movwf	4
   956  05BE  118A  2002  118A   	fcall	stringdir
   957  05C1  118A  25F8  118A   	fcall	_Lcd_Write_Char
   958  05C4                     l1050:
   959  05C4  3001               	movlw	1
   960  05C5  07F5               	addwf	Lcd_Write_String@i,f
   961  05C6  1803               	skipnc
   962  05C7  0AF6               	incf	Lcd_Write_String@i+1,f
   963  05C8  3000               	movlw	0
   964  05C9  07F6               	addwf	Lcd_Write_String@i+1,f
   965  05CA                     l1052:
   966  05CA  0875               	movf	Lcd_Write_String@i,w
   967  05CB  0777               	addwf	Lcd_Write_String@a,w
   968  05CC  0084               	movwf	4
   969  05CD  118A  2002  118A   	fcall	stringdir
   970  05D0  3A00               	xorlw	0
   971  05D1  1D03               	skipz
   972  05D2  2DD4               	goto	u401
   973  05D3  2DD5               	goto	u400
   974  05D4                     u401:
   975  05D4  2DBB               	goto	l1048
   976  05D5                     u400:
   977  05D5                     l73:
   978  05D5  0008               	return
   979  05D6                     __end_of_Lcd_Write_String:
   980                           
   981                           	psect	text3
   982  05F8                     __ptext3:	
   983 ;; *************** function _Lcd_Write_Char *****************
   984 ;; Defined at:
   985 ;;		line 176 in file "./lcd_16x4.h"
   986 ;; Parameters:    Size  Location     Type
   987 ;;  a               1    wreg     unsigned char 
   988 ;; Auto vars:     Size  Location     Type
   989 ;;  a               1    4[COMMON] unsigned char 
   990 ;;  y               1    3[COMMON] unsigned char 
   991 ;;  temp            1    2[COMMON] unsigned char 
   992 ;; Return value:  Size  Location     Type
   993 ;;                  1    wreg      void 
   994 ;; Registers used:
   995 ;;		wreg, status,2, status,0, pclath, cstack
   996 ;; Tracked objects:
   997 ;;		On entry : 0/0
   998 ;;		On exit  : 0/0
   999 ;;		Unchanged: 0/0
  1000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1001 ;;      Params:         0       0       0       0       0
  1002 ;;      Locals:         3       0       0       0       0
  1003 ;;      Temps:          1       0       0       0       0
  1004 ;;      Totals:         4       0       0       0       0
  1005 ;;Total ram usage:        4 bytes
  1006 ;; Hardware stack levels used: 1
  1007 ;; Hardware stack levels required when called: 1
  1008 ;; This function calls:
  1009 ;;		_Lcd_Port
  1010 ;; This function is called by:
  1011 ;;		_Lcd_Write_String
  1012 ;; This function uses a non-reentrant model
  1013 ;;
  1014                           
  1015                           
  1016                           ;psect for function _Lcd_Write_Char
  1017  05F8                     _Lcd_Write_Char:
  1018                           
  1019                           ;incstack = 0
  1020                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1021                           ;Lcd_Write_Char@a stored from wreg
  1022  05F8  00F4               	movwf	Lcd_Write_Char@a
  1023  05F9                     l974:
  1024                           
  1025                           ;./lcd_16x4.h: 176: void Lcd_Write_Char(char a);./lcd_16x4.h: 180: {;./lcd_16x4.h: 181: 
      +                             char temp,y;;./lcd_16x4.h: 182:    temp = (char)(a&0x0F);
  1026  05F9  0874               	movf	Lcd_Write_Char@a,w
  1027  05FA  390F               	andlw	15
  1028  05FB  00F1               	movwf	??_Lcd_Write_Char
  1029  05FC  0871               	movf	??_Lcd_Write_Char,w
  1030  05FD  00F2               	movwf	Lcd_Write_Char@temp
  1031                           
  1032                           ;./lcd_16x4.h: 183:    y = (char)(a&0xF0);
  1033  05FE  0874               	movf	Lcd_Write_Char@a,w
  1034  05FF  39F0               	andlw	240
  1035  0600  00F1               	movwf	??_Lcd_Write_Char
  1036  0601  0871               	movf	??_Lcd_Write_Char,w
  1037  0602  00F3               	movwf	Lcd_Write_Char@y
  1038  0603                     l976:
  1039                           
  1040                           ;./lcd_16x4.h: 184:    RB1 = 1;
  1041  0603  1283               	bcf	3,5	;RP0=0, select bank0
  1042  0604  1303               	bcf	3,6	;RP1=0, select bank0
  1043  0605  1486               	bsf	6,1	;volatile
  1044  0606                     l978:
  1045                           
  1046                           ;./lcd_16x4.h: 185:    Lcd_Port((char)(y>>4));
  1047  0606  0873               	movf	Lcd_Write_Char@y,w
  1048  0607  00F1               	movwf	??_Lcd_Write_Char
  1049  0608  3004               	movlw	4
  1050  0609                     u315:
  1051  0609  1003               	clrc
  1052  060A  0CF1               	rrf	??_Lcd_Write_Char,f
  1053  060B  3EFF               	addlw	-1
  1054  060C  1D03               	skipz
  1055  060D  2E09               	goto	u315
  1056  060E  0871               	movf	??_Lcd_Write_Char,w
  1057  060F  118A  25D6  118A   	fcall	_Lcd_Port
  1058  0612                     l980:
  1059                           
  1060                           ;./lcd_16x4.h: 186:    RB2 = 1;
  1061  0612  1283               	bcf	3,5	;RP0=0, select bank0
  1062  0613  1303               	bcf	3,6	;RP1=0, select bank0
  1063  0614  1506               	bsf	6,2	;volatile
  1064  0615                     l982:
  1065                           
  1066                           ;./lcd_16x4.h: 187:    _delay((unsigned long)((40)*(2000000/4000000.0)));
  1067  0615  3006               	movlw	6
  1068  0616  00F1               	movwf	??_Lcd_Write_Char
  1069  0617                     u587:
  1070  0617  0BF1               	decfsz	??_Lcd_Write_Char,f
  1071  0618  2E17               	goto	u587
  1072  0619  0000               	nop
  1073  061A                     l984:
  1074                           
  1075                           ;./lcd_16x4.h: 188:    RB2 = 0;
  1076  061A  1283               	bcf	3,5	;RP0=0, select bank0
  1077  061B  1303               	bcf	3,6	;RP1=0, select bank0
  1078  061C  1106               	bcf	6,2	;volatile
  1079  061D                     l986:
  1080                           
  1081                           ;./lcd_16x4.h: 189:    Lcd_Port(temp);
  1082  061D  0872               	movf	Lcd_Write_Char@temp,w
  1083  061E  118A  25D6  118A   	fcall	_Lcd_Port
  1084  0621                     l988:
  1085                           
  1086                           ;./lcd_16x4.h: 190:    RB2 = 1;
  1087  0621  1283               	bcf	3,5	;RP0=0, select bank0
  1088  0622  1303               	bcf	3,6	;RP1=0, select bank0
  1089  0623  1506               	bsf	6,2	;volatile
  1090  0624                     l990:
  1091                           
  1092                           ;./lcd_16x4.h: 191:    _delay((unsigned long)((40)*(2000000/4000000.0)));
  1093  0624  3006               	movlw	6
  1094  0625  00F1               	movwf	??_Lcd_Write_Char
  1095  0626                     u597:
  1096  0626  0BF1               	decfsz	??_Lcd_Write_Char,f
  1097  0627  2E26               	goto	u597
  1098  0628  0000               	nop
  1099  0629                     l992:
  1100                           
  1101                           ;./lcd_16x4.h: 192:    RB2 = 0;
  1102  0629  1283               	bcf	3,5	;RP0=0, select bank0
  1103  062A  1303               	bcf	3,6	;RP1=0, select bank0
  1104  062B  1106               	bcf	6,2	;volatile
  1105  062C                     l67:
  1106  062C  0008               	return
  1107  062D                     __end_of_Lcd_Write_Char:
  1108                           
  1109                           	psect	text4
  1110  0671                     __ptext4:	
  1111 ;; *************** function _Lcd_Set_Cursor *****************
  1112 ;; Defined at:
  1113 ;;		line 77 in file "./lcd_16x4.h"
  1114 ;; Parameters:    Size  Location     Type
  1115 ;;  b               1    wreg     unsigned char 
  1116 ;;  a               1    4[COMMON] unsigned char 
  1117 ;; Auto vars:     Size  Location     Type
  1118 ;;  b               1    7[COMMON] unsigned char 
  1119 ;;  temp            1   10[COMMON] unsigned char 
  1120 ;;  y               1    9[COMMON] unsigned char 
  1121 ;;  z               1    8[COMMON] unsigned char 
  1122 ;; Return value:  Size  Location     Type
  1123 ;;                  1    wreg      void 
  1124 ;; Registers used:
  1125 ;;		wreg, status,2, status,0, pclath, cstack
  1126 ;; Tracked objects:
  1127 ;;		On entry : 0/0
  1128 ;;		On exit  : 0/0
  1129 ;;		Unchanged: 0/0
  1130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1131 ;;      Params:         1       0       0       0       0
  1132 ;;      Locals:         4       0       0       0       0
  1133 ;;      Temps:          2       0       0       0       0
  1134 ;;      Totals:         7       0       0       0       0
  1135 ;;Total ram usage:        7 bytes
  1136 ;; Hardware stack levels used: 1
  1137 ;; Hardware stack levels required when called: 2
  1138 ;; This function calls:
  1139 ;;		_Lcd_Cmd
  1140 ;; This function is called by:
  1141 ;;		_main
  1142 ;; This function uses a non-reentrant model
  1143 ;;
  1144                           
  1145                           
  1146                           ;psect for function _Lcd_Set_Cursor
  1147  0671                     _Lcd_Set_Cursor:
  1148                           
  1149                           ;incstack = 0
  1150                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1151                           ;Lcd_Set_Cursor@b stored from wreg
  1152  0671  00F7               	movwf	Lcd_Set_Cursor@b
  1153  0672                     l996:
  1154                           
  1155                           ;./lcd_16x4.h: 77: void Lcd_Set_Cursor(char b, char a);./lcd_16x4.h: 85: {;./lcd_16x4.h:
      +                           86:  char temp,z,y;;./lcd_16x4.h: 87:  if(a == 1)
  1156  0672  0374               	decf	Lcd_Set_Cursor@a,w
  1157  0673  1D03               	btfss	3,2
  1158  0674  2E76               	goto	u321
  1159  0675  2E77               	goto	u320
  1160  0676                     u321:
  1161  0676  2E96               	goto	l1006
  1162  0677                     u320:
  1163  0677                     l998:
  1164                           
  1165                           ;./lcd_16x4.h: 88:  {;./lcd_16x4.h: 89:    temp = (char)(0x80 + b - 1);
  1166  0677  0877               	movf	Lcd_Set_Cursor@b,w
  1167  0678  3E7F               	addlw	127
  1168  0679  00F5               	movwf	??_Lcd_Set_Cursor
  1169  067A  0875               	movf	??_Lcd_Set_Cursor,w
  1170  067B  00FA               	movwf	Lcd_Set_Cursor@temp
  1171                           
  1172                           ;./lcd_16x4.h: 92:   z = (char)(temp>>4);
  1173  067C  087A               	movf	Lcd_Set_Cursor@temp,w
  1174  067D  00F5               	movwf	??_Lcd_Set_Cursor
  1175  067E  3004               	movlw	4
  1176  067F                     u335:
  1177  067F  1003               	clrc
  1178  0680  0CF5               	rrf	??_Lcd_Set_Cursor,f
  1179  0681  3EFF               	addlw	-1
  1180  0682  1D03               	skipz
  1181  0683  2E7F               	goto	u335
  1182  0684  0875               	movf	??_Lcd_Set_Cursor,w
  1183  0685  00F6               	movwf	??_Lcd_Set_Cursor+1
  1184  0686  0876               	movf	??_Lcd_Set_Cursor+1,w
  1185  0687  00F8               	movwf	Lcd_Set_Cursor@z
  1186  0688                     l1000:
  1187                           
  1188                           ;./lcd_16x4.h: 94:   y = (char)(temp & 0x0F);
  1189  0688  087A               	movf	Lcd_Set_Cursor@temp,w
  1190  0689  390F               	andlw	15
  1191  068A  00F5               	movwf	??_Lcd_Set_Cursor
  1192  068B  0875               	movf	??_Lcd_Set_Cursor,w
  1193  068C  00F9               	movwf	Lcd_Set_Cursor@y
  1194  068D                     l1002:
  1195                           
  1196                           ;./lcd_16x4.h: 95:   Lcd_Cmd(z);
  1197  068D  0878               	movf	Lcd_Set_Cursor@z,w
  1198  068E  118A  2585  118A   	fcall	_Lcd_Cmd
  1199  0691                     l1004:
  1200                           
  1201                           ;./lcd_16x4.h: 96:   Lcd_Cmd(y);
  1202  0691  0879               	movf	Lcd_Set_Cursor@y,w
  1203  0692  118A  2585  118A   	fcall	_Lcd_Cmd
  1204                           
  1205                           ;./lcd_16x4.h: 97:  }
  1206  0695  2F05               	goto	l61
  1207  0696                     l1006:
  1208  0696  3002               	movlw	2
  1209  0697  0674               	xorwf	Lcd_Set_Cursor@a,w
  1210  0698  1D03               	btfss	3,2
  1211  0699  2E9B               	goto	u341
  1212  069A  2E9C               	goto	u340
  1213  069B                     u341:
  1214  069B  2EBB               	goto	l1016
  1215  069C                     u340:
  1216  069C                     l1008:
  1217                           
  1218                           ;./lcd_16x4.h: 99:  {;./lcd_16x4.h: 100:   temp = (char)(0xC0 + b - 1);
  1219  069C  0877               	movf	Lcd_Set_Cursor@b,w
  1220  069D  3EBF               	addlw	191
  1221  069E  00F5               	movwf	??_Lcd_Set_Cursor
  1222  069F  0875               	movf	??_Lcd_Set_Cursor,w
  1223  06A0  00FA               	movwf	Lcd_Set_Cursor@temp
  1224                           
  1225                           ;./lcd_16x4.h: 103:   z = (char)(temp>>4);
  1226  06A1  087A               	movf	Lcd_Set_Cursor@temp,w
  1227  06A2  00F5               	movwf	??_Lcd_Set_Cursor
  1228  06A3  3004               	movlw	4
  1229  06A4                     u355:
  1230  06A4  1003               	clrc
  1231  06A5  0CF5               	rrf	??_Lcd_Set_Cursor,f
  1232  06A6  3EFF               	addlw	-1
  1233  06A7  1D03               	skipz
  1234  06A8  2EA4               	goto	u355
  1235  06A9  0875               	movf	??_Lcd_Set_Cursor,w
  1236  06AA  00F6               	movwf	??_Lcd_Set_Cursor+1
  1237  06AB  0876               	movf	??_Lcd_Set_Cursor+1,w
  1238  06AC  00F8               	movwf	Lcd_Set_Cursor@z
  1239  06AD                     l1010:
  1240                           
  1241                           ;./lcd_16x4.h: 104:   y = (char)(temp & 0x0F);
  1242  06AD  087A               	movf	Lcd_Set_Cursor@temp,w
  1243  06AE  390F               	andlw	15
  1244  06AF  00F5               	movwf	??_Lcd_Set_Cursor
  1245  06B0  0875               	movf	??_Lcd_Set_Cursor,w
  1246  06B1  00F9               	movwf	Lcd_Set_Cursor@y
  1247  06B2                     l1012:
  1248                           
  1249                           ;./lcd_16x4.h: 105:   Lcd_Cmd(z);
  1250  06B2  0878               	movf	Lcd_Set_Cursor@z,w
  1251  06B3  118A  2585  118A   	fcall	_Lcd_Cmd
  1252  06B6                     l1014:
  1253                           
  1254                           ;./lcd_16x4.h: 106:   Lcd_Cmd(y);
  1255  06B6  0879               	movf	Lcd_Set_Cursor@y,w
  1256  06B7  118A  2585  118A   	fcall	_Lcd_Cmd
  1257                           
  1258                           ;./lcd_16x4.h: 107:  }
  1259  06BA  2F05               	goto	l61
  1260  06BB                     l1016:
  1261  06BB  3003               	movlw	3
  1262  06BC  0674               	xorwf	Lcd_Set_Cursor@a,w
  1263  06BD  1D03               	btfss	3,2
  1264  06BE  2EC0               	goto	u361
  1265  06BF  2EC1               	goto	u360
  1266  06C0                     u361:
  1267  06C0  2EE0               	goto	l1026
  1268  06C1                     u360:
  1269  06C1                     l1018:
  1270                           
  1271                           ;./lcd_16x4.h: 109:  {;./lcd_16x4.h: 110:   temp = (char)(0x90 + b - 1);
  1272  06C1  0877               	movf	Lcd_Set_Cursor@b,w
  1273  06C2  3E8F               	addlw	143
  1274  06C3  00F5               	movwf	??_Lcd_Set_Cursor
  1275  06C4  0875               	movf	??_Lcd_Set_Cursor,w
  1276  06C5  00FA               	movwf	Lcd_Set_Cursor@temp
  1277                           
  1278                           ;./lcd_16x4.h: 113:   z = (char)(temp>>4);
  1279  06C6  087A               	movf	Lcd_Set_Cursor@temp,w
  1280  06C7  00F5               	movwf	??_Lcd_Set_Cursor
  1281  06C8  3004               	movlw	4
  1282  06C9                     u375:
  1283  06C9  1003               	clrc
  1284  06CA  0CF5               	rrf	??_Lcd_Set_Cursor,f
  1285  06CB  3EFF               	addlw	-1
  1286  06CC  1D03               	skipz
  1287  06CD  2EC9               	goto	u375
  1288  06CE  0875               	movf	??_Lcd_Set_Cursor,w
  1289  06CF  00F6               	movwf	??_Lcd_Set_Cursor+1
  1290  06D0  0876               	movf	??_Lcd_Set_Cursor+1,w
  1291  06D1  00F8               	movwf	Lcd_Set_Cursor@z
  1292  06D2                     l1020:
  1293                           
  1294                           ;./lcd_16x4.h: 114:   y = (char)(temp & 0x0F);
  1295  06D2  087A               	movf	Lcd_Set_Cursor@temp,w
  1296  06D3  390F               	andlw	15
  1297  06D4  00F5               	movwf	??_Lcd_Set_Cursor
  1298  06D5  0875               	movf	??_Lcd_Set_Cursor,w
  1299  06D6  00F9               	movwf	Lcd_Set_Cursor@y
  1300  06D7                     l1022:
  1301                           
  1302                           ;./lcd_16x4.h: 115:   Lcd_Cmd(z);
  1303  06D7  0878               	movf	Lcd_Set_Cursor@z,w
  1304  06D8  118A  2585  118A   	fcall	_Lcd_Cmd
  1305  06DB                     l1024:
  1306                           
  1307                           ;./lcd_16x4.h: 116:   Lcd_Cmd(y);
  1308  06DB  0879               	movf	Lcd_Set_Cursor@y,w
  1309  06DC  118A  2585  118A   	fcall	_Lcd_Cmd
  1310                           
  1311                           ;./lcd_16x4.h: 117:  }
  1312  06DF  2F05               	goto	l61
  1313  06E0                     l1026:
  1314  06E0  3004               	movlw	4
  1315  06E1  0674               	xorwf	Lcd_Set_Cursor@a,w
  1316  06E2  1D03               	btfss	3,2
  1317  06E3  2EE5               	goto	u381
  1318  06E4  2EE6               	goto	u380
  1319  06E5                     u381:
  1320  06E5  2F05               	goto	l57
  1321  06E6                     u380:
  1322  06E6                     l1028:
  1323                           
  1324                           ;./lcd_16x4.h: 119:  {;./lcd_16x4.h: 120:   temp = (char)(0xD0 + b - 1);
  1325  06E6  0877               	movf	Lcd_Set_Cursor@b,w
  1326  06E7  3ECF               	addlw	207
  1327  06E8  00F5               	movwf	??_Lcd_Set_Cursor
  1328  06E9  0875               	movf	??_Lcd_Set_Cursor,w
  1329  06EA  00FA               	movwf	Lcd_Set_Cursor@temp
  1330                           
  1331                           ;./lcd_16x4.h: 123:   z = (char)(temp>>4);
  1332  06EB  087A               	movf	Lcd_Set_Cursor@temp,w
  1333  06EC  00F5               	movwf	??_Lcd_Set_Cursor
  1334  06ED  3004               	movlw	4
  1335  06EE                     u395:
  1336  06EE  1003               	clrc
  1337  06EF  0CF5               	rrf	??_Lcd_Set_Cursor,f
  1338  06F0  3EFF               	addlw	-1
  1339  06F1  1D03               	skipz
  1340  06F2  2EEE               	goto	u395
  1341  06F3  0875               	movf	??_Lcd_Set_Cursor,w
  1342  06F4  00F6               	movwf	??_Lcd_Set_Cursor+1
  1343  06F5  0876               	movf	??_Lcd_Set_Cursor+1,w
  1344  06F6  00F8               	movwf	Lcd_Set_Cursor@z
  1345  06F7                     l1030:
  1346                           
  1347                           ;./lcd_16x4.h: 124:   y = (char)(temp & 0x0F);
  1348  06F7  087A               	movf	Lcd_Set_Cursor@temp,w
  1349  06F8  390F               	andlw	15
  1350  06F9  00F5               	movwf	??_Lcd_Set_Cursor
  1351  06FA  0875               	movf	??_Lcd_Set_Cursor,w
  1352  06FB  00F9               	movwf	Lcd_Set_Cursor@y
  1353  06FC                     l1032:
  1354                           
  1355                           ;./lcd_16x4.h: 125:   Lcd_Cmd(z);
  1356  06FC  0878               	movf	Lcd_Set_Cursor@z,w
  1357  06FD  118A  2585  118A   	fcall	_Lcd_Cmd
  1358  0700                     l1034:
  1359                           
  1360                           ;./lcd_16x4.h: 126:   Lcd_Cmd(y);
  1361  0700  0879               	movf	Lcd_Set_Cursor@y,w
  1362  0701  118A  2585  118A   	fcall	_Lcd_Cmd
  1363  0704  2F05               	goto	l61
  1364  0705                     l57:
  1365  0705                     l61:
  1366  0705  0008               	return
  1367  0706                     __end_of_Lcd_Set_Cursor:
  1368                           
  1369                           	psect	text5
  1370  062D                     __ptext5:	
  1371 ;; *************** function _Lcd_Init *****************
  1372 ;; Defined at:
  1373 ;;		line 130 in file "./lcd_16x4.h"
  1374 ;; Parameters:    Size  Location     Type
  1375 ;;		None
  1376 ;; Auto vars:     Size  Location     Type
  1377 ;;		None
  1378 ;; Return value:  Size  Location     Type
  1379 ;;                  1    wreg      void 
  1380 ;; Registers used:
  1381 ;;		wreg, status,2, status,0, pclath, cstack
  1382 ;; Tracked objects:
  1383 ;;		On entry : 0/0
  1384 ;;		On exit  : 0/0
  1385 ;;		Unchanged: 0/0
  1386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1387 ;;      Params:         0       0       0       0       0
  1388 ;;      Locals:         0       0       0       0       0
  1389 ;;      Temps:          2       0       0       0       0
  1390 ;;      Totals:         2       0       0       0       0
  1391 ;;Total ram usage:        2 bytes
  1392 ;; Hardware stack levels used: 1
  1393 ;; Hardware stack levels required when called: 2
  1394 ;; This function calls:
  1395 ;;		_Lcd_Cmd
  1396 ;;		_Lcd_Port
  1397 ;; This function is called by:
  1398 ;;		_main
  1399 ;; This function uses a non-reentrant model
  1400 ;;
  1401                           
  1402                           
  1403                           ;psect for function _Lcd_Init
  1404  062D                     _Lcd_Init:
  1405  062D                     l1036:	
  1406                           ;incstack = 0
  1407                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1408                           
  1409                           
  1410                           ;./lcd_16x4.h: 132:   Lcd_Port(0x00);
  1411  062D  3000               	movlw	0
  1412  062E  118A  25D6  118A   	fcall	_Lcd_Port
  1413  0631                     l1038:
  1414                           
  1415                           ;./lcd_16x4.h: 133:    _delay((unsigned long)((20)*(2000000/4000.0)));
  1416  0631  300D               	movlw	13
  1417  0632  00F5               	movwf	??_Lcd_Init+1
  1418  0633  30FB               	movlw	251
  1419  0634  00F4               	movwf	??_Lcd_Init
  1420  0635                     u607:
  1421  0635  0BF4               	decfsz	??_Lcd_Init,f
  1422  0636  2E35               	goto	u607
  1423  0637  0BF5               	decfsz	??_Lcd_Init+1,f
  1424  0638  2E35               	goto	u607
  1425  0639  2E3A               	nop2
  1426  063A                     l1040:
  1427                           
  1428                           ;./lcd_16x4.h: 134:   Lcd_Cmd(0x03);
  1429  063A  3003               	movlw	3
  1430  063B  118A  2585  118A   	fcall	_Lcd_Cmd
  1431                           
  1432                           ;./lcd_16x4.h: 137: _delay((unsigned long)((5)*(2000000/4000.0)));
  1433  063E  3004               	movlw	4
  1434  063F  00F5               	movwf	??_Lcd_Init+1
  1435  0640  303D               	movlw	61
  1436  0641  00F4               	movwf	??_Lcd_Init
  1437  0642                     u617:
  1438  0642  0BF4               	decfsz	??_Lcd_Init,f
  1439  0643  2E42               	goto	u617
  1440  0644  0BF5               	decfsz	??_Lcd_Init+1,f
  1441  0645  2E42               	goto	u617
  1442  0646  2E47               	nop2
  1443  0647                     l1042:
  1444                           
  1445                           ;./lcd_16x4.h: 138:   Lcd_Cmd(0x03);
  1446  0647  3003               	movlw	3
  1447  0648  118A  2585  118A   	fcall	_Lcd_Cmd
  1448  064B                     l1044:
  1449                           
  1450                           ;./lcd_16x4.h: 141:  _delay((unsigned long)((1)*(2000000/4000.0)));
  1451  064B  30A6               	movlw	166
  1452  064C  00F4               	movwf	??_Lcd_Init
  1453  064D                     u627:
  1454  064D  0BF4               	decfsz	??_Lcd_Init,f
  1455  064E  2E4D               	goto	u627
  1456  064F  0000               	nop
  1457                           
  1458                           ;./lcd_16x4.h: 142:   Lcd_Cmd(0x03);
  1459  0650  3003               	movlw	3
  1460  0651  118A  2585  118A   	fcall	_Lcd_Cmd
  1461                           
  1462                           ;./lcd_16x4.h: 146:   Lcd_Cmd(0x02);
  1463  0654  3002               	movlw	2
  1464  0655  118A  2585  118A   	fcall	_Lcd_Cmd
  1465                           
  1466                           ;./lcd_16x4.h: 151:   Lcd_Cmd(0x02);
  1467  0658  3002               	movlw	2
  1468  0659  118A  2585  118A   	fcall	_Lcd_Cmd
  1469                           
  1470                           ;./lcd_16x4.h: 152:   Lcd_Cmd(0x08);
  1471  065C  3008               	movlw	8
  1472  065D  118A  2585  118A   	fcall	_Lcd_Cmd
  1473                           
  1474                           ;./lcd_16x4.h: 159:   Lcd_Cmd(0x00);
  1475  0660  3000               	movlw	0
  1476  0661  118A  2585  118A   	fcall	_Lcd_Cmd
  1477                           
  1478                           ;./lcd_16x4.h: 160:   Lcd_Cmd(0x0C);
  1479  0664  300C               	movlw	12
  1480  0665  118A  2585  118A   	fcall	_Lcd_Cmd
  1481                           
  1482                           ;./lcd_16x4.h: 167:   Lcd_Cmd(0x00);
  1483  0668  3000               	movlw	0
  1484  0669  118A  2585  118A   	fcall	_Lcd_Cmd
  1485                           
  1486                           ;./lcd_16x4.h: 168:   Lcd_Cmd(0x04);
  1487  066C  3004               	movlw	4
  1488  066D  118A  2585  118A   	fcall	_Lcd_Cmd
  1489  0670                     l64:
  1490  0670  0008               	return
  1491  0671                     __end_of_Lcd_Init:
  1492                           
  1493                           	psect	text6
  1494  0572                     __ptext6:	
  1495 ;; *************** function _Lcd_Clear *****************
  1496 ;; Defined at:
  1497 ;;		line 70 in file "./lcd_16x4.h"
  1498 ;; Parameters:    Size  Location     Type
  1499 ;;		None
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;		None
  1502 ;; Return value:  Size  Location     Type
  1503 ;;                  1    wreg      void 
  1504 ;; Registers used:
  1505 ;;		wreg, status,2, status,0, pclath, cstack
  1506 ;; Tracked objects:
  1507 ;;		On entry : 0/0
  1508 ;;		On exit  : 0/0
  1509 ;;		Unchanged: 0/0
  1510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1511 ;;      Params:         0       0       0       0       0
  1512 ;;      Locals:         0       0       0       0       0
  1513 ;;      Temps:          0       0       0       0       0
  1514 ;;      Totals:         0       0       0       0       0
  1515 ;;Total ram usage:        0 bytes
  1516 ;; Hardware stack levels used: 1
  1517 ;; Hardware stack levels required when called: 2
  1518 ;; This function calls:
  1519 ;;		_Lcd_Cmd
  1520 ;; This function is called by:
  1521 ;;		_main
  1522 ;; This function uses a non-reentrant model
  1523 ;;
  1524                           
  1525                           
  1526                           ;psect for function _Lcd_Clear
  1527  0572                     _Lcd_Clear:
  1528  0572                     l994:	
  1529                           ;incstack = 0
  1530                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1531                           
  1532                           
  1533                           ;./lcd_16x4.h: 73:  Lcd_Cmd(0);
  1534  0572  3000               	movlw	0
  1535  0573  118A  2585  118A   	fcall	_Lcd_Cmd
  1536                           
  1537                           ;./lcd_16x4.h: 74:  Lcd_Cmd(1);
  1538  0576  3001               	movlw	1
  1539  0577  118A  2585  118A   	fcall	_Lcd_Cmd
  1540  057A                     l51:
  1541  057A  0008               	return
  1542  057B                     __end_of_Lcd_Clear:
  1543                           
  1544                           	psect	text7
  1545  0585                     __ptext7:	
  1546 ;; *************** function _Lcd_Cmd *****************
  1547 ;; Defined at:
  1548 ;;		line 61 in file "./lcd_16x4.h"
  1549 ;; Parameters:    Size  Location     Type
  1550 ;;  a               1    wreg     unsigned char 
  1551 ;; Auto vars:     Size  Location     Type
  1552 ;;  a               1    3[COMMON] unsigned char 
  1553 ;; Return value:  Size  Location     Type
  1554 ;;                  1    wreg      void 
  1555 ;; Registers used:
  1556 ;;		wreg, status,2, status,0, pclath, cstack
  1557 ;; Tracked objects:
  1558 ;;		On entry : 0/0
  1559 ;;		On exit  : 0/0
  1560 ;;		Unchanged: 0/0
  1561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1562 ;;      Params:         0       0       0       0       0
  1563 ;;      Locals:         1       0       0       0       0
  1564 ;;      Temps:          2       0       0       0       0
  1565 ;;      Totals:         3       0       0       0       0
  1566 ;;Total ram usage:        3 bytes
  1567 ;; Hardware stack levels used: 1
  1568 ;; Hardware stack levels required when called: 1
  1569 ;; This function calls:
  1570 ;;		_Lcd_Port
  1571 ;; This function is called by:
  1572 ;;		_Lcd_Clear
  1573 ;;		_Lcd_Set_Cursor
  1574 ;;		_Lcd_Init
  1575 ;;		_Lcd_Shift_Right
  1576 ;;		_Lcd_Shift_Left
  1577 ;; This function uses a non-reentrant model
  1578 ;;
  1579                           
  1580                           
  1581                           ;psect for function _Lcd_Cmd
  1582  0585                     _Lcd_Cmd:
  1583                           
  1584                           ;incstack = 0
  1585                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1586                           ;Lcd_Cmd@a stored from wreg
  1587  0585  00F3               	movwf	Lcd_Cmd@a
  1588  0586                     l964:
  1589                           
  1590                           ;./lcd_16x4.h: 61: void Lcd_Cmd(char a);./lcd_16x4.h: 62: {;./lcd_16x4.h: 63:  RB1 = 0;
  1591  0586  1283               	bcf	3,5	;RP0=0, select bank0
  1592  0587  1303               	bcf	3,6	;RP1=0, select bank0
  1593  0588  1086               	bcf	6,1	;volatile
  1594  0589                     l966:
  1595                           
  1596                           ;./lcd_16x4.h: 64:  Lcd_Port(a);
  1597  0589  0873               	movf	Lcd_Cmd@a,w
  1598  058A  118A  25D6  118A   	fcall	_Lcd_Port
  1599  058D                     l968:
  1600                           
  1601                           ;./lcd_16x4.h: 65:  RB2 = 1;
  1602  058D  1283               	bcf	3,5	;RP0=0, select bank0
  1603  058E  1303               	bcf	3,6	;RP1=0, select bank0
  1604  058F  1506               	bsf	6,2	;volatile
  1605  0590                     l970:
  1606                           
  1607                           ;./lcd_16x4.h: 66:         _delay((unsigned long)((4)*(2000000/4000.0)));
  1608  0590  3003               	movlw	3
  1609  0591  00F2               	movwf	??_Lcd_Cmd+1
  1610  0592  3097               	movlw	151
  1611  0593  00F1               	movwf	??_Lcd_Cmd
  1612  0594                     u637:
  1613  0594  0BF1               	decfsz	??_Lcd_Cmd,f
  1614  0595  2D94               	goto	u637
  1615  0596  0BF2               	decfsz	??_Lcd_Cmd+1,f
  1616  0597  2D94               	goto	u637
  1617  0598  2D99               	nop2
  1618  0599                     l972:
  1619                           
  1620                           ;./lcd_16x4.h: 67:         RB2 = 0;
  1621  0599  1283               	bcf	3,5	;RP0=0, select bank0
  1622  059A  1303               	bcf	3,6	;RP1=0, select bank0
  1623  059B  1106               	bcf	6,2	;volatile
  1624  059C                     l48:
  1625  059C  0008               	return
  1626  059D                     __end_of_Lcd_Cmd:
  1627                           
  1628                           	psect	text8
  1629  05D6                     __ptext8:	
  1630 ;; *************** function _Lcd_Port *****************
  1631 ;; Defined at:
  1632 ;;		line 39 in file "./lcd_16x4.h"
  1633 ;; Parameters:    Size  Location     Type
  1634 ;;  a               1    wreg     unsigned char 
  1635 ;; Auto vars:     Size  Location     Type
  1636 ;;  a               1    0[COMMON] unsigned char 
  1637 ;; Return value:  Size  Location     Type
  1638 ;;                  1    wreg      void 
  1639 ;; Registers used:
  1640 ;;		wreg
  1641 ;; Tracked objects:
  1642 ;;		On entry : 0/0
  1643 ;;		On exit  : 0/0
  1644 ;;		Unchanged: 0/0
  1645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1646 ;;      Params:         0       0       0       0       0
  1647 ;;      Locals:         1       0       0       0       0
  1648 ;;      Temps:          0       0       0       0       0
  1649 ;;      Totals:         1       0       0       0       0
  1650 ;;Total ram usage:        1 bytes
  1651 ;; Hardware stack levels used: 1
  1652 ;; This function calls:
  1653 ;;		Nothing
  1654 ;; This function is called by:
  1655 ;;		_Lcd_Cmd
  1656 ;;		_Lcd_Init
  1657 ;;		_Lcd_Write_Char
  1658 ;; This function uses a non-reentrant model
  1659 ;;
  1660                           
  1661                           
  1662                           ;psect for function _Lcd_Port
  1663  05D6                     _Lcd_Port:
  1664                           
  1665                           ;incstack = 0
  1666                           ; Regs used in _Lcd_Port: [wreg]
  1667                           ;Lcd_Port@a stored from wreg
  1668  05D6  00F0               	movwf	Lcd_Port@a
  1669  05D7                     l954:
  1670                           
  1671                           ;./lcd_16x4.h: 39: void Lcd_Port(char a);./lcd_16x4.h: 40: {;./lcd_16x4.h: 41:  if(a & 1
      +                          )
  1672  05D7  1C70               	btfss	Lcd_Port@a,0
  1673  05D8  2DDA               	goto	u271
  1674  05D9  2DDB               	goto	u270
  1675  05DA                     u271:
  1676  05DA  2DDF               	goto	l37
  1677  05DB                     u270:
  1678  05DB                     l956:
  1679                           
  1680                           ;./lcd_16x4.h: 42:   RB3 = 1;
  1681  05DB  1283               	bcf	3,5	;RP0=0, select bank0
  1682  05DC  1303               	bcf	3,6	;RP1=0, select bank0
  1683  05DD  1586               	bsf	6,3	;volatile
  1684  05DE  2DE2               	goto	l38
  1685  05DF                     l37:	
  1686                           ;./lcd_16x4.h: 43:  else
  1687                           
  1688                           
  1689                           ;./lcd_16x4.h: 44:   RB3 = 0;
  1690  05DF  1283               	bcf	3,5	;RP0=0, select bank0
  1691  05E0  1303               	bcf	3,6	;RP1=0, select bank0
  1692  05E1  1186               	bcf	6,3	;volatile
  1693  05E2                     l38:
  1694                           
  1695                           ;./lcd_16x4.h: 46:  if(a & 2)
  1696  05E2  1CF0               	btfss	Lcd_Port@a,1
  1697  05E3  2DE5               	goto	u281
  1698  05E4  2DE6               	goto	u280
  1699  05E5                     u281:
  1700  05E5  2DE8               	goto	l39
  1701  05E6                     u280:
  1702  05E6                     l958:
  1703                           
  1704                           ;./lcd_16x4.h: 47:   RB4 = 1;
  1705  05E6  1606               	bsf	6,4	;volatile
  1706  05E7  2DE9               	goto	l40
  1707  05E8                     l39:	
  1708                           ;./lcd_16x4.h: 48:  else
  1709                           
  1710                           
  1711                           ;./lcd_16x4.h: 49:   RB4 = 0;
  1712  05E8  1206               	bcf	6,4	;volatile
  1713  05E9                     l40:
  1714                           
  1715                           ;./lcd_16x4.h: 51:  if(a & 4)
  1716  05E9  1D70               	btfss	Lcd_Port@a,2
  1717  05EA  2DEC               	goto	u291
  1718  05EB  2DED               	goto	u290
  1719  05EC                     u291:
  1720  05EC  2DEF               	goto	l41
  1721  05ED                     u290:
  1722  05ED                     l960:
  1723                           
  1724                           ;./lcd_16x4.h: 52:   RB5 = 1;
  1725  05ED  1686               	bsf	6,5	;volatile
  1726  05EE  2DF0               	goto	l42
  1727  05EF                     l41:	
  1728                           ;./lcd_16x4.h: 53:  else
  1729                           
  1730                           
  1731                           ;./lcd_16x4.h: 54:   RB5 = 0;
  1732  05EF  1286               	bcf	6,5	;volatile
  1733  05F0                     l42:
  1734                           
  1735                           ;./lcd_16x4.h: 56:  if(a & 8)
  1736  05F0  1DF0               	btfss	Lcd_Port@a,3
  1737  05F1  2DF3               	goto	u301
  1738  05F2  2DF4               	goto	u300
  1739  05F3                     u301:
  1740  05F3  2DF6               	goto	l43
  1741  05F4                     u300:
  1742  05F4                     l962:
  1743                           
  1744                           ;./lcd_16x4.h: 57:   RB6 = 1;
  1745  05F4  1706               	bsf	6,6	;volatile
  1746  05F5  2DF7               	goto	l45
  1747  05F6                     l43:	
  1748                           ;./lcd_16x4.h: 58:  else
  1749                           
  1750                           
  1751                           ;./lcd_16x4.h: 59:   RB6 = 0;
  1752  05F6  1306               	bcf	6,6	;volatile
  1753  05F7                     l45:
  1754  05F7  0008               	return
  1755  05F8                     __end_of_Lcd_Port:
  1756                           
  1757                           	psect	text9
  1758  059D                     __ptext9:	
  1759 ;; *************** function _ConfigPorts *****************
  1760 ;; Defined at:
  1761 ;;		line 60 in file "main.c"
  1762 ;; Parameters:    Size  Location     Type
  1763 ;;		None
  1764 ;; Auto vars:     Size  Location     Type
  1765 ;;		None
  1766 ;; Return value:  Size  Location     Type
  1767 ;;                  1    wreg      void 
  1768 ;; Registers used:
  1769 ;;		status,2
  1770 ;; Tracked objects:
  1771 ;;		On entry : 0/0
  1772 ;;		On exit  : 0/0
  1773 ;;		Unchanged: 0/0
  1774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1775 ;;      Params:         0       0       0       0       0
  1776 ;;      Locals:         0       0       0       0       0
  1777 ;;      Temps:          0       0       0       0       0
  1778 ;;      Totals:         0       0       0       0       0
  1779 ;;Total ram usage:        0 bytes
  1780 ;; Hardware stack levels used: 1
  1781 ;; This function calls:
  1782 ;;		Nothing
  1783 ;; This function is called by:
  1784 ;;		_main
  1785 ;; This function uses a non-reentrant model
  1786 ;;
  1787                           
  1788                           
  1789                           ;psect for function _ConfigPorts
  1790  059D                     _ConfigPorts:
  1791  059D                     l1056:	
  1792                           ;incstack = 0
  1793                           ; Regs used in _ConfigPorts: [status,2]
  1794                           
  1795                           
  1796                           ;main.c: 62:     ANSEL = 0x00;
  1797  059D  1683               	bsf	3,5	;RP0=1, select bank1
  1798  059E  1303               	bcf	3,6	;RP1=0, select bank1
  1799  059F  019B               	clrf	27	;volatile
  1800                           
  1801                           ;main.c: 63:     PORTA = 0x00;
  1802  05A0  1283               	bcf	3,5	;RP0=0, select bank0
  1803  05A1  1303               	bcf	3,6	;RP1=0, select bank0
  1804  05A2  0185               	clrf	5	;volatile
  1805                           
  1806                           ;main.c: 64:     PORTB = 0x00;
  1807  05A3  0186               	clrf	6	;volatile
  1808  05A4                     l1058:
  1809                           
  1810                           ;main.c: 66:     TRISAbits.TRISA0 = 0b1;
  1811  05A4  1683               	bsf	3,5	;RP0=1, select bank1
  1812  05A5  1303               	bcf	3,6	;RP1=0, select bank1
  1813  05A6  1405               	bsf	5,0	;volatile
  1814  05A7                     l1060:
  1815                           
  1816                           ;main.c: 67:     TRISAbits.TRISA1 = 0b1;
  1817  05A7  1485               	bsf	5,1	;volatile
  1818  05A8                     l1062:
  1819                           
  1820                           ;main.c: 68:     TRISAbits.TRISA2 = 0b0;
  1821  05A8  1105               	bcf	5,2	;volatile
  1822  05A9                     l1064:
  1823                           
  1824                           ;main.c: 69:     TRISAbits.TRISA3 = 0b0;
  1825  05A9  1185               	bcf	5,3	;volatile
  1826  05AA                     l1066:
  1827                           
  1828                           ;main.c: 70:     TRISAbits.TRISA4 = 0b0;
  1829  05AA  1205               	bcf	5,4	;volatile
  1830  05AB                     l1068:
  1831                           
  1832                           ;main.c: 71:     TRISAbits.TRISA5 = 0b1;
  1833  05AB  1685               	bsf	5,5	;volatile
  1834  05AC                     l1070:
  1835                           
  1836                           ;main.c: 72:     TRISAbits.TRISA6 = 0b1;
  1837  05AC  1705               	bsf	5,6	;volatile
  1838  05AD                     l1072:
  1839                           
  1840                           ;main.c: 73:     TRISAbits.TRISA7 = 0b1;
  1841  05AD  1785               	bsf	5,7	;volatile
  1842  05AE                     l1074:
  1843                           
  1844                           ;main.c: 75:     TRISBbits.TRISB0 = 0b1;
  1845  05AE  1406               	bsf	6,0	;volatile
  1846  05AF                     l1076:
  1847                           
  1848                           ;main.c: 76:     TRISBbits.TRISB1 = 0b0;
  1849  05AF  1086               	bcf	6,1	;volatile
  1850  05B0                     l1078:
  1851                           
  1852                           ;main.c: 77:     TRISBbits.TRISB2 = 0b0;
  1853  05B0  1106               	bcf	6,2	;volatile
  1854  05B1                     l1080:
  1855                           
  1856                           ;main.c: 78:     TRISBbits.TRISB3 = 0b0;
  1857  05B1  1186               	bcf	6,3	;volatile
  1858  05B2                     l1082:
  1859                           
  1860                           ;main.c: 79:     TRISBbits.TRISB4 = 0b0;
  1861  05B2  1206               	bcf	6,4	;volatile
  1862  05B3                     l1084:
  1863                           
  1864                           ;main.c: 80:     TRISBbits.TRISB5 = 0b0;
  1865  05B3  1286               	bcf	6,5	;volatile
  1866  05B4                     l1086:
  1867                           
  1868                           ;main.c: 81:     TRISBbits.TRISB6 = 0b0;
  1869  05B4  1306               	bcf	6,6	;volatile
  1870  05B5                     l1088:
  1871                           
  1872                           ;main.c: 82:     TRISBbits.TRISB7 = 0b1;
  1873  05B5  1786               	bsf	6,7	;volatile
  1874  05B6                     l91:
  1875  05B6  0008               	return
  1876  05B7                     __end_of_ConfigPorts:
  1877                           
  1878                           	psect	text10
  1879  056B                     __ptext10:	
  1880 ;; *************** function _ConfigOscillator *****************
  1881 ;; Defined at:
  1882 ;;		line 49 in file "main.c"
  1883 ;; Parameters:    Size  Location     Type
  1884 ;;		None
  1885 ;; Auto vars:     Size  Location     Type
  1886 ;;		None
  1887 ;; Return value:  Size  Location     Type
  1888 ;;                  1    wreg      void 
  1889 ;; Registers used:
  1890 ;;		wreg, status,2, status,0
  1891 ;; Tracked objects:
  1892 ;;		On entry : 0/0
  1893 ;;		On exit  : 0/0
  1894 ;;		Unchanged: 0/0
  1895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1896 ;;      Params:         0       0       0       0       0
  1897 ;;      Locals:         0       0       0       0       0
  1898 ;;      Temps:          0       0       0       0       0
  1899 ;;      Totals:         0       0       0       0       0
  1900 ;;Total ram usage:        0 bytes
  1901 ;; Hardware stack levels used: 1
  1902 ;; This function calls:
  1903 ;;		Nothing
  1904 ;; This function is called by:
  1905 ;;		_main
  1906 ;; This function uses a non-reentrant model
  1907 ;;
  1908                           
  1909                           
  1910                           ;psect for function _ConfigOscillator
  1911  056B                     _ConfigOscillator:
  1912  056B                     l1054:	
  1913                           ;incstack = 0
  1914                           ; Regs used in _ConfigOscillator: [wreg+status,2+status,0]
  1915                           
  1916                           
  1917                           ;main.c: 51:     OSCCONbits.IRCF = 0b111;
  1918  056B  3070               	movlw	112
  1919  056C  1683               	bsf	3,5	;RP0=1, select bank1
  1920  056D  1303               	bcf	3,6	;RP1=0, select bank1
  1921  056E  048F               	iorwf	15,f	;volatile
  1922                           
  1923                           ;main.c: 52:     OSCCONbits.SCS = 0b00;
  1924  056F  30FC               	movlw	-4
  1925  0570  058F               	andwf	15,f	;volatile
  1926  0571                     l88:
  1927  0571  0008               	return
  1928  0572                     __end_of_ConfigOscillator:
  1929  007E                     btemp	set	126	;btemp
  1930  007E                     wtemp0	set	126
  1931                           
  1932                           	psect	config
  1933                           
  1934                           ;Config register CONFIG1 @ 0x2007
  1935                           ;	Oscillator Selection bits
  1936                           ;	FOSC = INTOSCIO, INTRC oscillator; port I/O function on both RA6/OSC2/CLKO pin and RA7
      +                          /OSC1/CLKI pin
  1937                           ;	Watchdog Timer Enable bit
  1938                           ;	WDTE = OFF, WDT disabled
  1939                           ;	Power-up Timer Enable bit
  1940                           ;	PWRTE = ON, PWRT enabled
  1941                           ;	RA5/MCLR/VPP Pin Function Select bit
  1942                           ;	MCLRE = OFF, RA5/MCLR/VPP pin function is digital I/O, MCLR internally tied to VDD
  1943                           ;	Brown-out Reset Enable bit
  1944                           ;	BOREN = ON, BOR enabled
  1945                           ;	Low-Voltage Programming Enable bit
  1946                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1947                           ;	Data EE Memory Code Protection bit
  1948                           ;	CPD = OFF, Code protection off
  1949                           ;	Flash Program Memory Write Enable bits
  1950                           ;	WRT = OFF, Write protection off
  1951                           ;	In-Circuit Debugger Mode bit
  1952                           ;	DEBUG = 0x1, unprogrammed default
  1953                           ;	CCP1 Pin Selection bit
  1954                           ;	CCPMX = RB0, CCP1 function on RB0
  1955                           ;	Flash Program Memory Code Protection bit
  1956                           ;	CP = OFF, Code protection off
  1957  2007                     	org	8199
  1958  2007  3F50               	dw	16208
  1959                           
  1960                           ;Config register CONFIG2 @ 0x2008
  1961                           ;	Fail-Safe Clock Monitor Enable bit
  1962                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1963                           ;	Internal External Switchover bit
  1964                           ;	IESO = OFF, Internal External Switchover mode disabled
  1965  2008                     	org	8200
  1966  2008  3FFC               	dw	16380

Data Sizes:
    Strings     22
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      4       9
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 11
		 -> STR_2(CODE[11]), STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0    1538
                                             11 COMMON     3     3      0
                                              0 BANK0      4     4      0
                   _ConfigOscillator
                        _ConfigPorts
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _Retardo
 ---------------------------------------------------------------------------------
 (1) _Retardo                                              2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     334
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     802
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigPorts                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigOscillator                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigOscillator
   _ConfigPorts
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _Retardo

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      17       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       9       5       11.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      17      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Aug 11 15:58:17 2021

                        pc 0002                         l40 05E9                         l41 05EF  
                       l42 05F0                         l43 05F6                         l51 057A  
                       l45 05F7                         l37 05DF                         l61 0705  
                       l38 05E2                         l39 05E8                         l48 059C  
                       l64 0670                         l57 0705                         l73 05D5  
                       l91 05B6                         l67 062C                         l88 0571  
                       l99 0584                         fsr 0004                        l113 07F3  
                      l114 07C5                        l116 07C6                        l108 0762  
                      l117 07F1                        l109 0782                        l960 05ED  
                      l962 05F4                        l954 05D7                        l970 0590  
                      l956 05DB                        l972 0599                        l964 0586  
                      l980 0612                        l958 05E6                        l966 0589  
                      l990 0624                        l982 0615                        l974 05F9  
                      l968 058D                        l992 0629                        l984 061A  
                      l976 0603                        l994 0572                        l986 061D  
                      l978 0606                        l996 0672                        l988 0621  
                      l998 0677                        _RB1 0031                        _RB2 0032  
                      _RB3 0033                        _RB4 0034                        _RB5 0035  
                      _RB6 0036                        u300 05F4                        u301 05F3  
                      u320 0677                        u400 05D5                        u321 0676  
                      u401 05D4                        u315 0609                        u340 069C  
                      u500 07BE                        u341 069B                        u501 07BD  
                      u270 05DB                        u510 07CC                        u430 0754  
                      u271 05DA                        u335 067F                        u511 07CB  
                      u431 0753                        u280 05E6                        u360 06C1  
                      u520 07EA                        u440 075E                        u281 05E5  
                      u361 06C0                        u521 07E9                        u505 07BA  
                      u441 075D                        u290 05ED                        u450 0762  
                      u291 05EC                        u355 06A4                        u451 0761  
                      u380 06E6                        u460 0766                        u381 06E5  
                      u525 07E6                        u461 0765                        u470 0777  
                      u607 0635                        u375 06C9                        u471 0776  
                      u480 0793                        u617 0642                        u481 0792  
                      u537 0728                        u490 07A0                        u627 064D  
                      u395 06EE                        u491 079F                        u475 0773  
                      u547 073F                        u637 0594                        u557 07A4  
                      u485 078F                        u567 07D0                        u577 057F  
                      u587 0617                        u597 0626                        fsr0 0004  
                     l1000 0688                       l1010 06AD                       l1002 068D  
                     l1020 06D2                       l1012 06B2                       l1004 0691  
                     l1030 06F7                       l1022 06D7                       l1014 06B6  
                     l1006 0696                       l1110 0711                       l1040 063A  
                     l1032 06FC                       l1024 06DB                       l1008 069C  
                     l1016 06BB                       l1120 0724                       l1112 0714  
                     l1104 0706                       l1042 0647                       l1034 0700  
                     l1018 06C1                       l1026 06E0                       l1050 05C4  
                     l1130 0747                       l1122 072D                       l1114 0717  
                     l1106 070A                       l1060 05A7                       l1044 064B  
                     l1036 062D                       l1028 06E6                       l1052 05CA  
                     l1140 074E                       l1132 074A                       l1124 0735  
                     l1116 071A                       l1108 070E                       l1054 056B  
                     l1070 05AC                       l1062 05A8                       l1038 0631  
                     l1046 05B8                       l1150 0766                       l1142 0754  
                     l1134 074B                       l1126 0739                       l1118 0720  
                     l1080 05B1                       l1072 05AD                       l1064 05A9  
                     l1056 059D                       l1048 05BB                       l1160 0785  
                     l1152 0769                       l1144 0758                       l1136 074C  
                     l1128 0746                       l1082 05B2                       l1074 05AE  
                     l1066 05AA                       l1058 05A4                       l1090 057B  
                     l1170 079B                       l1162 0793                       l1154 0777  
                     l1146 0759                       l1138 074D                       l1084 05B3  
                     l1076 05AF                       l1068 05AB                       l1180 07C2  
                     l1172 079C                       l1156 077C                       l1148 075E  
                     l1086 05B4                       l1078 05B0                       l1190 07EE  
                     l1182 07C3                       l1174 07A0                       l1158 077E  
                     l1088 05B5                       l1192 07EF                       l1184 07CC  
                     l1176 07B1                       l1168 0799                       l1186 07DD  
                     l1178 07BE                       l1188 07EA                       STR_1 0008  
                     STR_2 0013          ?_Lcd_Write_String 0070                       _main 0706  
                     btemp 007E                       start 0000         ??_Lcd_Write_String 0075  
          __end_of_Lcd_Cmd 059D        __end_of_ConfigPorts 05B7            __end_of_Retardo 0585  
                    ?_main 0070                      _ANSEL 009B                      _PORTA 0005  
                    _PORTB 0006    __size_of_Lcd_Set_Cursor 0095                      pclath 000A  
                    status 0003                      wtemp0 007E                 _CountSteps 0020  
               _FotoCelula 0024           __end_of_Lcd_Init 0671           __end_of_Lcd_Port 05F8  
          __initialization 07F6               __end_of_main 07F6                     ??_main 007B  
       __size_of_Lcd_Clear 0009                  ??_Lcd_Cmd 0071    __size_of_Lcd_Write_Char 0035  
              _ConfigPorts 059D                     _AutMan 0022                  ??_Retardo 0070  
 __end_of_ConfigOscillator 0572            Lcd_Set_Cursor@a 0074            Lcd_Set_Cursor@b 0077  
          Lcd_Set_Cursor@y 0079            Lcd_Set_Cursor@z 0078    __end_of__initialization 07FD  
        __end_of_Lcd_Clear 057B             __pcstackCOMMON 0070             _Lcd_Set_Cursor 0671  
           _OPTION_REGbits 0081                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
               __pbssBANK0 0020                 __pmaintext 0706  __size_of_Lcd_Write_String 001F  
   __end_of_Lcd_Set_Cursor 0706                 ??_Lcd_Init 0074                 ??_Lcd_Port 0070  
               __stringtab 0002             _Lcd_Write_Char 05F8                    _Lcd_Cmd 0585  
                  _Retardo 057B            ?_Lcd_Set_Cursor 0074                    __ptext1 057B  
                  __ptext2 05B7                    __ptext3 05F8                    __ptext4 0671  
                  __ptext5 062D                    __ptext6 0572                    __ptext7 0585  
                  __ptext8 05D6                    __ptext9 059D     __end_of_Lcd_Write_Char 062D  
     end_of_initialization 07FD               ?_ConfigPorts 0070          ?_ConfigOscillator 0070  
                Lcd_Port@a 0070         ??_ConfigOscillator 0070                  _PORTAbits 0005  
                _PORTBbits 0006                  _TRISAbits 0085                  _TRISBbits 0086  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0077          Lcd_Write_String@i 0075  
                _Lcd_Clear 0572           _Lcd_Write_String 05B7        start_initialization 07F6  
        __size_of_Lcd_Init 0044          __size_of_Lcd_Port 0022                 ?_Lcd_Clear 0070  
          Lcd_Write_Char@a 0074            Lcd_Write_Char@y 0073                  ___latbits 0001  
            __pcstackBANK0 0025                   ?_Lcd_Cmd 0070       __size_of_ConfigPorts 001A  
                 ?_Retardo 0070           ??_Lcd_Set_Cursor 0075                  __pstrings 0002  
                 Lcd_Cmd@a 0073                ??_Lcd_Clear 0074                  main@Count 0027  
              __stringbase 0007                  main@Steps 0025           ??_Lcd_Write_Char 0071  
__size_of_ConfigOscillator 0007                   _Lcd_Init 062D                   _Lcd_Port 05D6  
 __end_of_Lcd_Write_String 05D6           __size_of_Lcd_Cmd 0018           __size_of_Retardo 000A  
       __end_of__stringtab 0008                   __ptext10 056B              __size_of_main 00F0  
               _INTCONbits 000B         Lcd_Write_Char@temp 0072                  stringcode 0002  
               _OSCCONbits 008F         Lcd_Set_Cursor@temp 007A                   stringdir 0002  
                 stringtab 0002           _ConfigOscillator 056B              ??_ConfigPorts 0070  
