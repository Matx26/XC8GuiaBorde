

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Aug 08 23:18:24 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F88
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	text9,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F88 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  008C                     	;# 
    86  008D                     	;# 
    87  008E                     	;# 
    88  008F                     	;# 
    89  0090                     	;# 
    90  0092                     	;# 
    91  0093                     	;# 
    92  0094                     	;# 
    93  0098                     	;# 
    94  0099                     	;# 
    95  009B                     	;# 
    96  009C                     	;# 
    97  009D                     	;# 
    98  009E                     	;# 
    99  009F                     	;# 
   100  0105                     	;# 
   101  010C                     	;# 
   102  010D                     	;# 
   103  010E                     	;# 
   104  010F                     	;# 
   105  018C                     	;# 
   106  018D                     	;# 
   107  0000                     	;# 
   108  0001                     	;# 
   109  0002                     	;# 
   110  0003                     	;# 
   111  0004                     	;# 
   112  0005                     	;# 
   113  0006                     	;# 
   114  000A                     	;# 
   115  000B                     	;# 
   116  000C                     	;# 
   117  000D                     	;# 
   118  000E                     	;# 
   119  000E                     	;# 
   120  000F                     	;# 
   121  0010                     	;# 
   122  0011                     	;# 
   123  0012                     	;# 
   124  0013                     	;# 
   125  0014                     	;# 
   126  0015                     	;# 
   127  0015                     	;# 
   128  0016                     	;# 
   129  0017                     	;# 
   130  0018                     	;# 
   131  0019                     	;# 
   132  001A                     	;# 
   133  001E                     	;# 
   134  001F                     	;# 
   135  0081                     	;# 
   136  0085                     	;# 
   137  0086                     	;# 
   138  008C                     	;# 
   139  008D                     	;# 
   140  008E                     	;# 
   141  008F                     	;# 
   142  0090                     	;# 
   143  0092                     	;# 
   144  0093                     	;# 
   145  0094                     	;# 
   146  0098                     	;# 
   147  0099                     	;# 
   148  009B                     	;# 
   149  009C                     	;# 
   150  009D                     	;# 
   151  009E                     	;# 
   152  009F                     	;# 
   153  0105                     	;# 
   154  010C                     	;# 
   155  010D                     	;# 
   156  010E                     	;# 
   157  010F                     	;# 
   158  018C                     	;# 
   159  018D                     	;# 
   160  0006                     _PORTB	set	6
   161  0005                     _PORTA	set	5
   162  0032                     _RB2	set	50
   163  0031                     _RB1	set	49
   164  0036                     _RB6	set	54
   165  0035                     _RB5	set	53
   166  0034                     _RB4	set	52
   167  0033                     _RB3	set	51
   168  0086                     _TRISBbits	set	134
   169  0085                     _TRISAbits	set	133
   170  009B                     _ANSEL	set	155
   171  008F                     _OSCCONbits	set	143
   172                           
   173                           	psect	strings
   174  0002                     __pstrings:
   175  0002                     stringtab:
   176  0002                     __stringtab:
   177  0002                     stringcode:	
   178                           ;	String table - string pointers are 1 byte each
   179                           
   180  0002                     stringdir:
   181  0002  3000               	movlw	high stringdir
   182  0003  008A               	movwf	10
   183  0004  0804               	movf	4,w
   184  0005  0A84               	incf	4,f
   185  0006  0782               	addwf	2,f
   186  0007                     __stringbase:
   187  0007  3400               	retlw	0
   188  0008                     __end_of__stringtab:
   189  0008                     STR_1:
   190  0008  3448               	retlw	72	;'H'
   191  0009  346F               	retlw	111	;'o'
   192  000A  346C               	retlw	108	;'l'
   193  000B  3461               	retlw	97	;'a'
   194  000C  3420               	retlw	32	;' '
   195  000D  344D               	retlw	77	;'M'
   196  000E  3475               	retlw	117	;'u'
   197  000F  346E               	retlw	110	;'n'
   198  0010  3464               	retlw	100	;'d'
   199  0011  346F               	retlw	111	;'o'
   200  0012  3400               	retlw	0
   201  0013                     STR_2:
   202  0013  3453               	retlw	83	;'S'
   203  0014  346F               	retlw	111	;'o'
   204  0015  3479               	retlw	121	;'y'
   205  0016  3420               	retlw	32	;' '
   206  0017  344D               	retlw	77	;'M'
   207  0018  3461               	retlw	97	;'a'
   208  0019  3474               	retlw	116	;'t'
   209  001A  3469               	retlw	105	;'i'
   210  001B  3461               	retlw	97	;'a'
   211  001C  3473               	retlw	115	;'s'
   212  001D  3400               	retlw	0
   213                           
   214                           	psect	cinit
   215  07FD                     start_initialization:	
   216                           ; #config settings
   217                           
   218  07FD                     __initialization:
   219  07FD                     end_of_initialization:	
   220                           ;End of C runtime variable initialization code
   221                           
   222  07FD                     __end_of__initialization:
   223  07FD  0183               	clrf	3
   224  07FE  118A  2EE5         	ljmp	_main	;jump to C main() function
   225                           
   226                           	psect	cstackCOMMON
   227  0070                     __pcstackCOMMON:
   228  0070                     ?_Lcd_Port:
   229  0070                     ??_Lcd_Port:	
   230                           ; 1 bytes @ 0x0
   231                           
   232  0070                     ?_Lcd_Cmd:	
   233                           ; 1 bytes @ 0x0
   234                           
   235  0070                     ?_Lcd_Clear:	
   236                           ; 1 bytes @ 0x0
   237                           
   238  0070                     ?_Lcd_Init:	
   239                           ; 1 bytes @ 0x0
   240                           
   241  0070                     ?_Lcd_Write_Char:	
   242                           ; 1 bytes @ 0x0
   243                           
   244  0070                     ?_Lcd_Write_String:	
   245                           ; 1 bytes @ 0x0
   246                           
   247  0070                     ?_ConfigOscillator:	
   248                           ; 1 bytes @ 0x0
   249                           
   250  0070                     ??_ConfigOscillator:	
   251                           ; 1 bytes @ 0x0
   252                           
   253  0070                     ?_ConfigPorts:	
   254                           ; 1 bytes @ 0x0
   255                           
   256  0070                     ??_ConfigPorts:	
   257                           ; 1 bytes @ 0x0
   258                           
   259  0070                     ?_main:	
   260                           ; 1 bytes @ 0x0
   261                           
   262  0070                     Lcd_Port@a:	
   263                           ; 1 bytes @ 0x0
   264                           
   265                           
   266                           ; 1 bytes @ 0x0
   267  0070                     	ds	1
   268  0071                     ??_Lcd_Cmd:
   269  0071                     ??_Lcd_Write_Char:	
   270                           ; 1 bytes @ 0x1
   271                           
   272                           
   273                           ; 1 bytes @ 0x1
   274  0071                     	ds	1
   275  0072                     Lcd_Write_Char@temp:
   276                           
   277                           ; 1 bytes @ 0x2
   278  0072                     	ds	1
   279  0073                     Lcd_Cmd@a:
   280  0073                     Lcd_Write_Char@y:	
   281                           ; 1 bytes @ 0x3
   282                           
   283                           
   284                           ; 1 bytes @ 0x3
   285  0073                     	ds	1
   286  0074                     ??_Lcd_Clear:
   287  0074                     ?_Lcd_Set_Cursor:	
   288                           ; 1 bytes @ 0x4
   289                           
   290  0074                     ??_Lcd_Init:	
   291                           ; 1 bytes @ 0x4
   292                           
   293  0074                     Lcd_Set_Cursor@a:	
   294                           ; 1 bytes @ 0x4
   295                           
   296  0074                     Lcd_Write_Char@a:	
   297                           ; 1 bytes @ 0x4
   298                           
   299                           
   300                           ; 1 bytes @ 0x4
   301  0074                     	ds	1
   302  0075                     ??_Lcd_Set_Cursor:
   303  0075                     ??_Lcd_Write_String:	
   304                           ; 1 bytes @ 0x5
   305                           
   306  0075                     Lcd_Write_String@i:	
   307                           ; 1 bytes @ 0x5
   308                           
   309                           
   310                           ; 2 bytes @ 0x5
   311  0075                     	ds	2
   312  0077                     Lcd_Set_Cursor@b:
   313  0077                     Lcd_Write_String@a:	
   314                           ; 1 bytes @ 0x7
   315                           
   316                           
   317                           ; 1 bytes @ 0x7
   318  0077                     	ds	1
   319  0078                     Lcd_Set_Cursor@z:
   320                           
   321                           ; 1 bytes @ 0x8
   322  0078                     	ds	1
   323  0079                     Lcd_Set_Cursor@y:
   324                           
   325                           ; 1 bytes @ 0x9
   326  0079                     	ds	1
   327  007A                     Lcd_Set_Cursor@temp:
   328                           
   329                           ; 1 bytes @ 0xA
   330  007A                     	ds	1
   331  007B                     ??_main:
   332                           
   333                           ; 1 bytes @ 0xB
   334  007B                     	ds	3
   335                           
   336                           	psect	maintext
   337  06E5                     __pmaintext:	
   338 ;;
   339 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   340 ;;
   341 ;; *************** function _main *****************
   342 ;; Defined at:
   343 ;;		line 80 in file "main.c"
   344 ;; Parameters:    Size  Location     Type
   345 ;;		None
   346 ;; Auto vars:     Size  Location     Type
   347 ;;		None
   348 ;; Return value:  Size  Location     Type
   349 ;;                  1    wreg      void 
   350 ;; Registers used:
   351 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   352 ;; Tracked objects:
   353 ;;		On entry : B00/0
   354 ;;		On exit  : 0/0
   355 ;;		Unchanged: 0/0
   356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   357 ;;      Params:         0       0       0       0       0
   358 ;;      Locals:         0       0       0       0       0
   359 ;;      Temps:          3       0       0       0       0
   360 ;;      Totals:         3       0       0       0       0
   361 ;;Total ram usage:        3 bytes
   362 ;; Hardware stack levels required when called: 3
   363 ;; This function calls:
   364 ;;		_ConfigOscillator
   365 ;;		_ConfigPorts
   366 ;;		_Lcd_Clear
   367 ;;		_Lcd_Init
   368 ;;		_Lcd_Set_Cursor
   369 ;;		_Lcd_Write_String
   370 ;; This function is called by:
   371 ;;		Startup code after reset
   372 ;; This function uses a non-reentrant model
   373 ;;
   374                           
   375                           
   376                           ;psect for function _main
   377  06E5                     _main:
   378  06E5                     l883:	
   379                           ;incstack = 0
   380                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   381                           
   382                           
   383                           ;main.c: 82:     ConfigOscillator();
   384  06E5  118A  262D  118A   	fcall	_ConfigOscillator
   385  06E8                     l885:
   386                           
   387                           ;main.c: 83:     ConfigPorts();
   388  06E8  118A  2655  118A   	fcall	_ConfigPorts
   389  06EB                     l887:
   390                           
   391                           ;main.c: 84:     Lcd_Init();
   392  06EB  118A  2724  118A   	fcall	_Lcd_Init
   393  06EE                     l889:
   394                           
   395                           ;main.c: 85:     Lcd_Clear();
   396  06EE  118A  2634  118A   	fcall	_Lcd_Clear
   397  06F1                     l891:
   398                           
   399                           ;main.c: 87:     Lcd_Set_Cursor(1,1);
   400  06F1  01F4               	clrf	Lcd_Set_Cursor@a
   401  06F2  0AF4               	incf	Lcd_Set_Cursor@a,f
   402  06F3  3001               	movlw	1
   403  06F4  118A  2768  118A   	fcall	_Lcd_Set_Cursor
   404  06F7                     l893:
   405                           
   406                           ;main.c: 88:     Lcd_Write_String("Hola Mundo");
   407  06F7  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   408  06F8  118A  266F  118A   	fcall	_Lcd_Write_String
   409  06FB                     l895:
   410                           
   411                           ;main.c: 89:     _delay((unsigned long)((1000)*(2000000/4000.0)));
   412  06FB  3003               	movlw	3
   413  06FC  00FD               	movwf	??_main+2
   414  06FD  308A               	movlw	138
   415  06FE  00FC               	movwf	??_main+1
   416  06FF  3055               	movlw	85
   417  0700  00FB               	movwf	??_main
   418  0701                     u247:
   419  0701  0BFB               	decfsz	??_main,f
   420  0702  2F01               	goto	u247
   421  0703  0BFC               	decfsz	??_main+1,f
   422  0704  2F01               	goto	u247
   423  0705  0BFD               	decfsz	??_main+2,f
   424  0706  2F01               	goto	u247
   425  0707  2F08               	nop2
   426  0708                     l897:
   427                           
   428                           ;main.c: 90:     Lcd_Set_Cursor(1,2);
   429  0708  3002               	movlw	2
   430  0709  00FB               	movwf	??_main
   431  070A  087B               	movf	??_main,w
   432  070B  00F4               	movwf	Lcd_Set_Cursor@a
   433  070C  3001               	movlw	1
   434  070D  118A  2768  118A   	fcall	_Lcd_Set_Cursor
   435                           
   436                           ;main.c: 91:     Lcd_Write_String("Soy Matias");
   437  0710  300C               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   438  0711  118A  266F  118A   	fcall	_Lcd_Write_String
   439  0714                     l899:
   440                           
   441                           ;main.c: 92:     _delay((unsigned long)((1000)*(2000000/4000.0)));
   442  0714  3003               	movlw	3
   443  0715  00FD               	movwf	??_main+2
   444  0716  308A               	movlw	138
   445  0717  00FC               	movwf	??_main+1
   446  0718  3055               	movlw	85
   447  0719  00FB               	movwf	??_main
   448  071A                     u257:
   449  071A  0BFB               	decfsz	??_main,f
   450  071B  2F1A               	goto	u257
   451  071C  0BFC               	decfsz	??_main+1,f
   452  071D  2F1A               	goto	u257
   453  071E  0BFD               	decfsz	??_main+2,f
   454  071F  2F1A               	goto	u257
   455  0720  2F21               	nop2
   456  0721                     l82:	
   457                           ;main.c: 93:     while(1)
   458                           
   459  0721                     l83:	
   460                           ;main.c: 94:     {;main.c: 96:     }
   461                           
   462  0721  2F21               	goto	l82
   463  0722  118A  2800         	ljmp	start
   464  0724                     __end_of_main:
   465                           
   466                           	psect	text1
   467  066F                     __ptext1:	
   468 ;; *************** function _Lcd_Write_String *****************
   469 ;; Defined at:
   470 ;;		line 195 in file "./lcd_16x4.h"
   471 ;; Parameters:    Size  Location     Type
   472 ;;  a               1    wreg     PTR unsigned char 
   473 ;;		 -> STR_2(11), STR_1(11), 
   474 ;; Auto vars:     Size  Location     Type
   475 ;;  a               1    7[COMMON] PTR unsigned char 
   476 ;;		 -> STR_2(11), STR_1(11), 
   477 ;;  i               2    5[COMMON] int 
   478 ;; Return value:  Size  Location     Type
   479 ;;                  1    wreg      void 
   480 ;; Registers used:
   481 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   482 ;; Tracked objects:
   483 ;;		On entry : 0/0
   484 ;;		On exit  : 0/0
   485 ;;		Unchanged: 0/0
   486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   487 ;;      Params:         0       0       0       0       0
   488 ;;      Locals:         3       0       0       0       0
   489 ;;      Temps:          0       0       0       0       0
   490 ;;      Totals:         3       0       0       0       0
   491 ;;Total ram usage:        3 bytes
   492 ;; Hardware stack levels used: 1
   493 ;; Hardware stack levels required when called: 2
   494 ;; This function calls:
   495 ;;		_Lcd_Write_Char
   496 ;; This function is called by:
   497 ;;		_main
   498 ;; This function uses a non-reentrant model
   499 ;;
   500                           
   501                           
   502                           ;psect for function _Lcd_Write_String
   503  066F                     _Lcd_Write_String:
   504                           
   505                           ;incstack = 0
   506                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   507                           ;Lcd_Write_String@a stored from wreg
   508  066F  00F7               	movwf	Lcd_Write_String@a
   509  0670                     l875:
   510                           
   511                           ;./lcd_16x4.h: 195: void Lcd_Write_String(char *a);./lcd_16x4.h: 196: {;./lcd_16x4.h: 19
      +                          7:  int i;;./lcd_16x4.h: 198:  for(i=0;a[i]!='\0';i++)
   512  0670  01F5               	clrf	Lcd_Write_String@i
   513  0671  01F6               	clrf	Lcd_Write_String@i+1
   514  0672  2E82               	goto	l881
   515  0673                     l877:
   516                           
   517                           ;./lcd_16x4.h: 199:     Lcd_Write_Char(a[i]);
   518  0673  0875               	movf	Lcd_Write_String@i,w
   519  0674  0777               	addwf	Lcd_Write_String@a,w
   520  0675  0084               	movwf	4
   521  0676  118A  2002  118A   	fcall	stringdir
   522  0679  118A  26B0  118A   	fcall	_Lcd_Write_Char
   523  067C                     l879:
   524  067C  3001               	movlw	1
   525  067D  07F5               	addwf	Lcd_Write_String@i,f
   526  067E  1803               	skipnc
   527  067F  0AF6               	incf	Lcd_Write_String@i+1,f
   528  0680  3000               	movlw	0
   529  0681  07F6               	addwf	Lcd_Write_String@i+1,f
   530  0682                     l881:
   531  0682  0875               	movf	Lcd_Write_String@i,w
   532  0683  0777               	addwf	Lcd_Write_String@a,w
   533  0684  0084               	movwf	4
   534  0685  118A  2002  118A   	fcall	stringdir
   535  0688  3A00               	xorlw	0
   536  0689  1D03               	skipz
   537  068A  2E8C               	goto	u231
   538  068B  2E8D               	goto	u230
   539  068C                     u231:
   540  068C  2E73               	goto	l877
   541  068D                     u230:
   542  068D                     l65:
   543  068D  0008               	return
   544  068E                     __end_of_Lcd_Write_String:
   545                           
   546                           	psect	text2
   547  06B0                     __ptext2:	
   548 ;; *************** function _Lcd_Write_Char *****************
   549 ;; Defined at:
   550 ;;		line 176 in file "./lcd_16x4.h"
   551 ;; Parameters:    Size  Location     Type
   552 ;;  a               1    wreg     unsigned char 
   553 ;; Auto vars:     Size  Location     Type
   554 ;;  a               1    4[COMMON] unsigned char 
   555 ;;  y               1    3[COMMON] unsigned char 
   556 ;;  temp            1    2[COMMON] unsigned char 
   557 ;; Return value:  Size  Location     Type
   558 ;;                  1    wreg      void 
   559 ;; Registers used:
   560 ;;		wreg, status,2, status,0, pclath, cstack
   561 ;; Tracked objects:
   562 ;;		On entry : 0/0
   563 ;;		On exit  : 0/0
   564 ;;		Unchanged: 0/0
   565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   566 ;;      Params:         0       0       0       0       0
   567 ;;      Locals:         3       0       0       0       0
   568 ;;      Temps:          1       0       0       0       0
   569 ;;      Totals:         4       0       0       0       0
   570 ;;Total ram usage:        4 bytes
   571 ;; Hardware stack levels used: 1
   572 ;; Hardware stack levels required when called: 1
   573 ;; This function calls:
   574 ;;		_Lcd_Port
   575 ;; This function is called by:
   576 ;;		_Lcd_Write_String
   577 ;; This function uses a non-reentrant model
   578 ;;
   579                           
   580                           
   581                           ;psect for function _Lcd_Write_Char
   582  06B0                     _Lcd_Write_Char:
   583                           
   584                           ;incstack = 0
   585                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
   586                           ;Lcd_Write_Char@a stored from wreg
   587  06B0  00F4               	movwf	Lcd_Write_Char@a
   588  06B1                     l697:
   589                           
   590                           ;./lcd_16x4.h: 176: void Lcd_Write_Char(char a);./lcd_16x4.h: 180: {;./lcd_16x4.h: 181: 
      +                             char temp,y;;./lcd_16x4.h: 182:    temp = (char)(a&0x0F);
   591  06B1  0874               	movf	Lcd_Write_Char@a,w
   592  06B2  390F               	andlw	15
   593  06B3  00F1               	movwf	??_Lcd_Write_Char
   594  06B4  0871               	movf	??_Lcd_Write_Char,w
   595  06B5  00F2               	movwf	Lcd_Write_Char@temp
   596                           
   597                           ;./lcd_16x4.h: 183:    y = (char)(a&0xF0);
   598  06B6  0874               	movf	Lcd_Write_Char@a,w
   599  06B7  39F0               	andlw	240
   600  06B8  00F1               	movwf	??_Lcd_Write_Char
   601  06B9  0871               	movf	??_Lcd_Write_Char,w
   602  06BA  00F3               	movwf	Lcd_Write_Char@y
   603  06BB                     l699:
   604                           
   605                           ;./lcd_16x4.h: 184:    RB1 = 1;
   606  06BB  1283               	bcf	3,5	;RP0=0, select bank0
   607  06BC  1303               	bcf	3,6	;RP1=0, select bank0
   608  06BD  1486               	bsf	6,1	;volatile
   609  06BE                     l701:
   610                           
   611                           ;./lcd_16x4.h: 185:    Lcd_Port((char)(y>>4));
   612  06BE  0873               	movf	Lcd_Write_Char@y,w
   613  06BF  00F1               	movwf	??_Lcd_Write_Char
   614  06C0  3004               	movlw	4
   615  06C1                     u55:
   616  06C1  1003               	clrc
   617  06C2  0CF1               	rrf	??_Lcd_Write_Char,f
   618  06C3  3EFF               	addlw	-1
   619  06C4  1D03               	skipz
   620  06C5  2EC1               	goto	u55
   621  06C6  0871               	movf	??_Lcd_Write_Char,w
   622  06C7  118A  268E  118A   	fcall	_Lcd_Port
   623  06CA                     l703:
   624                           
   625                           ;./lcd_16x4.h: 186:    RB2 = 1;
   626  06CA  1283               	bcf	3,5	;RP0=0, select bank0
   627  06CB  1303               	bcf	3,6	;RP1=0, select bank0
   628  06CC  1506               	bsf	6,2	;volatile
   629  06CD                     l705:
   630                           
   631                           ;./lcd_16x4.h: 187:    _delay((unsigned long)((40)*(2000000/4000000.0)));
   632  06CD  3006               	movlw	6
   633  06CE  00F1               	movwf	??_Lcd_Write_Char
   634  06CF                     u267:
   635  06CF  0BF1               	decfsz	??_Lcd_Write_Char,f
   636  06D0  2ECF               	goto	u267
   637  06D1  0000               	nop
   638  06D2                     l707:
   639                           
   640                           ;./lcd_16x4.h: 188:    RB2 = 0;
   641  06D2  1283               	bcf	3,5	;RP0=0, select bank0
   642  06D3  1303               	bcf	3,6	;RP1=0, select bank0
   643  06D4  1106               	bcf	6,2	;volatile
   644  06D5                     l709:
   645                           
   646                           ;./lcd_16x4.h: 189:    Lcd_Port(temp);
   647  06D5  0872               	movf	Lcd_Write_Char@temp,w
   648  06D6  118A  268E  118A   	fcall	_Lcd_Port
   649  06D9                     l711:
   650                           
   651                           ;./lcd_16x4.h: 190:    RB2 = 1;
   652  06D9  1283               	bcf	3,5	;RP0=0, select bank0
   653  06DA  1303               	bcf	3,6	;RP1=0, select bank0
   654  06DB  1506               	bsf	6,2	;volatile
   655  06DC                     l713:
   656                           
   657                           ;./lcd_16x4.h: 191:    _delay((unsigned long)((40)*(2000000/4000000.0)));
   658  06DC  3006               	movlw	6
   659  06DD  00F1               	movwf	??_Lcd_Write_Char
   660  06DE                     u277:
   661  06DE  0BF1               	decfsz	??_Lcd_Write_Char,f
   662  06DF  2EDE               	goto	u277
   663  06E0  0000               	nop
   664  06E1                     l715:
   665                           
   666                           ;./lcd_16x4.h: 192:    RB2 = 0;
   667  06E1  1283               	bcf	3,5	;RP0=0, select bank0
   668  06E2  1303               	bcf	3,6	;RP1=0, select bank0
   669  06E3  1106               	bcf	6,2	;volatile
   670  06E4                     l59:
   671  06E4  0008               	return
   672  06E5                     __end_of_Lcd_Write_Char:
   673                           
   674                           	psect	text3
   675  0768                     __ptext3:	
   676 ;; *************** function _Lcd_Set_Cursor *****************
   677 ;; Defined at:
   678 ;;		line 77 in file "./lcd_16x4.h"
   679 ;; Parameters:    Size  Location     Type
   680 ;;  b               1    wreg     unsigned char 
   681 ;;  a               1    4[COMMON] unsigned char 
   682 ;; Auto vars:     Size  Location     Type
   683 ;;  b               1    7[COMMON] unsigned char 
   684 ;;  temp            1   10[COMMON] unsigned char 
   685 ;;  y               1    9[COMMON] unsigned char 
   686 ;;  z               1    8[COMMON] unsigned char 
   687 ;; Return value:  Size  Location     Type
   688 ;;                  1    wreg      void 
   689 ;; Registers used:
   690 ;;		wreg, status,2, status,0, pclath, cstack
   691 ;; Tracked objects:
   692 ;;		On entry : 0/0
   693 ;;		On exit  : 0/0
   694 ;;		Unchanged: 0/0
   695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   696 ;;      Params:         1       0       0       0       0
   697 ;;      Locals:         4       0       0       0       0
   698 ;;      Temps:          2       0       0       0       0
   699 ;;      Totals:         7       0       0       0       0
   700 ;;Total ram usage:        7 bytes
   701 ;; Hardware stack levels used: 1
   702 ;; Hardware stack levels required when called: 2
   703 ;; This function calls:
   704 ;;		_Lcd_Cmd
   705 ;; This function is called by:
   706 ;;		_main
   707 ;; This function uses a non-reentrant model
   708 ;;
   709                           
   710                           
   711                           ;psect for function _Lcd_Set_Cursor
   712  0768                     _Lcd_Set_Cursor:
   713                           
   714                           ;incstack = 0
   715                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
   716                           ;Lcd_Set_Cursor@b stored from wreg
   717  0768  00F7               	movwf	Lcd_Set_Cursor@b
   718  0769                     l835:
   719                           
   720                           ;./lcd_16x4.h: 77: void Lcd_Set_Cursor(char b, char a);./lcd_16x4.h: 85: {;./lcd_16x4.h:
      +                           86:  char temp,z,y;;./lcd_16x4.h: 87:  if(a == 1)
   721  0769  0374               	decf	Lcd_Set_Cursor@a,w
   722  076A  1D03               	btfss	3,2
   723  076B  2F6D               	goto	u151
   724  076C  2F6E               	goto	u150
   725  076D                     u151:
   726  076D  2F8D               	goto	l845
   727  076E                     u150:
   728  076E                     l837:
   729                           
   730                           ;./lcd_16x4.h: 88:  {;./lcd_16x4.h: 89:    temp = (char)(0x80 + b - 1);
   731  076E  0877               	movf	Lcd_Set_Cursor@b,w
   732  076F  3E7F               	addlw	127
   733  0770  00F5               	movwf	??_Lcd_Set_Cursor
   734  0771  0875               	movf	??_Lcd_Set_Cursor,w
   735  0772  00FA               	movwf	Lcd_Set_Cursor@temp
   736                           
   737                           ;./lcd_16x4.h: 92:   z = (char)(temp>>4);
   738  0773  087A               	movf	Lcd_Set_Cursor@temp,w
   739  0774  00F5               	movwf	??_Lcd_Set_Cursor
   740  0775  3004               	movlw	4
   741  0776                     u165:
   742  0776  1003               	clrc
   743  0777  0CF5               	rrf	??_Lcd_Set_Cursor,f
   744  0778  3EFF               	addlw	-1
   745  0779  1D03               	skipz
   746  077A  2F76               	goto	u165
   747  077B  0875               	movf	??_Lcd_Set_Cursor,w
   748  077C  00F6               	movwf	??_Lcd_Set_Cursor+1
   749  077D  0876               	movf	??_Lcd_Set_Cursor+1,w
   750  077E  00F8               	movwf	Lcd_Set_Cursor@z
   751  077F                     l839:
   752                           
   753                           ;./lcd_16x4.h: 94:   y = (char)(temp & 0x0F);
   754  077F  087A               	movf	Lcd_Set_Cursor@temp,w
   755  0780  390F               	andlw	15
   756  0781  00F5               	movwf	??_Lcd_Set_Cursor
   757  0782  0875               	movf	??_Lcd_Set_Cursor,w
   758  0783  00F9               	movwf	Lcd_Set_Cursor@y
   759  0784                     l841:
   760                           
   761                           ;./lcd_16x4.h: 95:   Lcd_Cmd(z);
   762  0784  0878               	movf	Lcd_Set_Cursor@z,w
   763  0785  118A  263D  118A   	fcall	_Lcd_Cmd
   764  0788                     l843:
   765                           
   766                           ;./lcd_16x4.h: 96:   Lcd_Cmd(y);
   767  0788  0879               	movf	Lcd_Set_Cursor@y,w
   768  0789  118A  263D  118A   	fcall	_Lcd_Cmd
   769                           
   770                           ;./lcd_16x4.h: 97:  }
   771  078C  2FFC               	goto	l53
   772  078D                     l845:
   773  078D  3002               	movlw	2
   774  078E  0674               	xorwf	Lcd_Set_Cursor@a,w
   775  078F  1D03               	btfss	3,2
   776  0790  2F92               	goto	u171
   777  0791  2F93               	goto	u170
   778  0792                     u171:
   779  0792  2FB2               	goto	l855
   780  0793                     u170:
   781  0793                     l847:
   782                           
   783                           ;./lcd_16x4.h: 99:  {;./lcd_16x4.h: 100:   temp = (char)(0xC0 + b - 1);
   784  0793  0877               	movf	Lcd_Set_Cursor@b,w
   785  0794  3EBF               	addlw	191
   786  0795  00F5               	movwf	??_Lcd_Set_Cursor
   787  0796  0875               	movf	??_Lcd_Set_Cursor,w
   788  0797  00FA               	movwf	Lcd_Set_Cursor@temp
   789                           
   790                           ;./lcd_16x4.h: 103:   z = (char)(temp>>4);
   791  0798  087A               	movf	Lcd_Set_Cursor@temp,w
   792  0799  00F5               	movwf	??_Lcd_Set_Cursor
   793  079A  3004               	movlw	4
   794  079B                     u185:
   795  079B  1003               	clrc
   796  079C  0CF5               	rrf	??_Lcd_Set_Cursor,f
   797  079D  3EFF               	addlw	-1
   798  079E  1D03               	skipz
   799  079F  2F9B               	goto	u185
   800  07A0  0875               	movf	??_Lcd_Set_Cursor,w
   801  07A1  00F6               	movwf	??_Lcd_Set_Cursor+1
   802  07A2  0876               	movf	??_Lcd_Set_Cursor+1,w
   803  07A3  00F8               	movwf	Lcd_Set_Cursor@z
   804  07A4                     l849:
   805                           
   806                           ;./lcd_16x4.h: 104:   y = (char)(temp & 0x0F);
   807  07A4  087A               	movf	Lcd_Set_Cursor@temp,w
   808  07A5  390F               	andlw	15
   809  07A6  00F5               	movwf	??_Lcd_Set_Cursor
   810  07A7  0875               	movf	??_Lcd_Set_Cursor,w
   811  07A8  00F9               	movwf	Lcd_Set_Cursor@y
   812  07A9                     l851:
   813                           
   814                           ;./lcd_16x4.h: 105:   Lcd_Cmd(z);
   815  07A9  0878               	movf	Lcd_Set_Cursor@z,w
   816  07AA  118A  263D  118A   	fcall	_Lcd_Cmd
   817  07AD                     l853:
   818                           
   819                           ;./lcd_16x4.h: 106:   Lcd_Cmd(y);
   820  07AD  0879               	movf	Lcd_Set_Cursor@y,w
   821  07AE  118A  263D  118A   	fcall	_Lcd_Cmd
   822                           
   823                           ;./lcd_16x4.h: 107:  }
   824  07B1  2FFC               	goto	l53
   825  07B2                     l855:
   826  07B2  3003               	movlw	3
   827  07B3  0674               	xorwf	Lcd_Set_Cursor@a,w
   828  07B4  1D03               	btfss	3,2
   829  07B5  2FB7               	goto	u191
   830  07B6  2FB8               	goto	u190
   831  07B7                     u191:
   832  07B7  2FD7               	goto	l865
   833  07B8                     u190:
   834  07B8                     l857:
   835                           
   836                           ;./lcd_16x4.h: 109:  {;./lcd_16x4.h: 110:   temp = (char)(0x90 + b - 1);
   837  07B8  0877               	movf	Lcd_Set_Cursor@b,w
   838  07B9  3E8F               	addlw	143
   839  07BA  00F5               	movwf	??_Lcd_Set_Cursor
   840  07BB  0875               	movf	??_Lcd_Set_Cursor,w
   841  07BC  00FA               	movwf	Lcd_Set_Cursor@temp
   842                           
   843                           ;./lcd_16x4.h: 113:   z = (char)(temp>>4);
   844  07BD  087A               	movf	Lcd_Set_Cursor@temp,w
   845  07BE  00F5               	movwf	??_Lcd_Set_Cursor
   846  07BF  3004               	movlw	4
   847  07C0                     u205:
   848  07C0  1003               	clrc
   849  07C1  0CF5               	rrf	??_Lcd_Set_Cursor,f
   850  07C2  3EFF               	addlw	-1
   851  07C3  1D03               	skipz
   852  07C4  2FC0               	goto	u205
   853  07C5  0875               	movf	??_Lcd_Set_Cursor,w
   854  07C6  00F6               	movwf	??_Lcd_Set_Cursor+1
   855  07C7  0876               	movf	??_Lcd_Set_Cursor+1,w
   856  07C8  00F8               	movwf	Lcd_Set_Cursor@z
   857  07C9                     l859:
   858                           
   859                           ;./lcd_16x4.h: 114:   y = (char)(temp & 0x0F);
   860  07C9  087A               	movf	Lcd_Set_Cursor@temp,w
   861  07CA  390F               	andlw	15
   862  07CB  00F5               	movwf	??_Lcd_Set_Cursor
   863  07CC  0875               	movf	??_Lcd_Set_Cursor,w
   864  07CD  00F9               	movwf	Lcd_Set_Cursor@y
   865  07CE                     l861:
   866                           
   867                           ;./lcd_16x4.h: 115:   Lcd_Cmd(z);
   868  07CE  0878               	movf	Lcd_Set_Cursor@z,w
   869  07CF  118A  263D  118A   	fcall	_Lcd_Cmd
   870  07D2                     l863:
   871                           
   872                           ;./lcd_16x4.h: 116:   Lcd_Cmd(y);
   873  07D2  0879               	movf	Lcd_Set_Cursor@y,w
   874  07D3  118A  263D  118A   	fcall	_Lcd_Cmd
   875                           
   876                           ;./lcd_16x4.h: 117:  }
   877  07D6  2FFC               	goto	l53
   878  07D7                     l865:
   879  07D7  3004               	movlw	4
   880  07D8  0674               	xorwf	Lcd_Set_Cursor@a,w
   881  07D9  1D03               	btfss	3,2
   882  07DA  2FDC               	goto	u211
   883  07DB  2FDD               	goto	u210
   884  07DC                     u211:
   885  07DC  2FFC               	goto	l49
   886  07DD                     u210:
   887  07DD                     l867:
   888                           
   889                           ;./lcd_16x4.h: 119:  {;./lcd_16x4.h: 120:   temp = (char)(0xD0 + b - 1);
   890  07DD  0877               	movf	Lcd_Set_Cursor@b,w
   891  07DE  3ECF               	addlw	207
   892  07DF  00F5               	movwf	??_Lcd_Set_Cursor
   893  07E0  0875               	movf	??_Lcd_Set_Cursor,w
   894  07E1  00FA               	movwf	Lcd_Set_Cursor@temp
   895                           
   896                           ;./lcd_16x4.h: 123:   z = (char)(temp>>4);
   897  07E2  087A               	movf	Lcd_Set_Cursor@temp,w
   898  07E3  00F5               	movwf	??_Lcd_Set_Cursor
   899  07E4  3004               	movlw	4
   900  07E5                     u225:
   901  07E5  1003               	clrc
   902  07E6  0CF5               	rrf	??_Lcd_Set_Cursor,f
   903  07E7  3EFF               	addlw	-1
   904  07E8  1D03               	skipz
   905  07E9  2FE5               	goto	u225
   906  07EA  0875               	movf	??_Lcd_Set_Cursor,w
   907  07EB  00F6               	movwf	??_Lcd_Set_Cursor+1
   908  07EC  0876               	movf	??_Lcd_Set_Cursor+1,w
   909  07ED  00F8               	movwf	Lcd_Set_Cursor@z
   910  07EE                     l869:
   911                           
   912                           ;./lcd_16x4.h: 124:   y = (char)(temp & 0x0F);
   913  07EE  087A               	movf	Lcd_Set_Cursor@temp,w
   914  07EF  390F               	andlw	15
   915  07F0  00F5               	movwf	??_Lcd_Set_Cursor
   916  07F1  0875               	movf	??_Lcd_Set_Cursor,w
   917  07F2  00F9               	movwf	Lcd_Set_Cursor@y
   918  07F3                     l871:
   919                           
   920                           ;./lcd_16x4.h: 125:   Lcd_Cmd(z);
   921  07F3  0878               	movf	Lcd_Set_Cursor@z,w
   922  07F4  118A  263D  118A   	fcall	_Lcd_Cmd
   923  07F7                     l873:
   924                           
   925                           ;./lcd_16x4.h: 126:   Lcd_Cmd(y);
   926  07F7  0879               	movf	Lcd_Set_Cursor@y,w
   927  07F8  118A  263D  118A   	fcall	_Lcd_Cmd
   928  07FB  2FFC               	goto	l53
   929  07FC                     l49:
   930  07FC                     l53:
   931  07FC  0008               	return
   932  07FD                     __end_of_Lcd_Set_Cursor:
   933                           
   934                           	psect	text4
   935  0724                     __ptext4:	
   936 ;; *************** function _Lcd_Init *****************
   937 ;; Defined at:
   938 ;;		line 130 in file "./lcd_16x4.h"
   939 ;; Parameters:    Size  Location     Type
   940 ;;		None
   941 ;; Auto vars:     Size  Location     Type
   942 ;;		None
   943 ;; Return value:  Size  Location     Type
   944 ;;                  1    wreg      void 
   945 ;; Registers used:
   946 ;;		wreg, status,2, status,0, pclath, cstack
   947 ;; Tracked objects:
   948 ;;		On entry : 0/0
   949 ;;		On exit  : 0/0
   950 ;;		Unchanged: 0/0
   951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   952 ;;      Params:         0       0       0       0       0
   953 ;;      Locals:         0       0       0       0       0
   954 ;;      Temps:          2       0       0       0       0
   955 ;;      Totals:         2       0       0       0       0
   956 ;;Total ram usage:        2 bytes
   957 ;; Hardware stack levels used: 1
   958 ;; Hardware stack levels required when called: 2
   959 ;; This function calls:
   960 ;;		_Lcd_Cmd
   961 ;;		_Lcd_Port
   962 ;; This function is called by:
   963 ;;		_main
   964 ;; This function uses a non-reentrant model
   965 ;;
   966                           
   967                           
   968                           ;psect for function _Lcd_Init
   969  0724                     _Lcd_Init:
   970  0724                     l759:	
   971                           ;incstack = 0
   972                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
   973                           
   974                           
   975                           ;./lcd_16x4.h: 132:   Lcd_Port(0x00);
   976  0724  3000               	movlw	0
   977  0725  118A  268E  118A   	fcall	_Lcd_Port
   978  0728                     l761:
   979                           
   980                           ;./lcd_16x4.h: 133:    _delay((unsigned long)((20)*(2000000/4000.0)));
   981  0728  300D               	movlw	13
   982  0729  00F5               	movwf	??_Lcd_Init+1
   983  072A  30FB               	movlw	251
   984  072B  00F4               	movwf	??_Lcd_Init
   985  072C                     u287:
   986  072C  0BF4               	decfsz	??_Lcd_Init,f
   987  072D  2F2C               	goto	u287
   988  072E  0BF5               	decfsz	??_Lcd_Init+1,f
   989  072F  2F2C               	goto	u287
   990  0730  2F31               	nop2
   991  0731                     l763:
   992                           
   993                           ;./lcd_16x4.h: 134:   Lcd_Cmd(0x03);
   994  0731  3003               	movlw	3
   995  0732  118A  263D  118A   	fcall	_Lcd_Cmd
   996                           
   997                           ;./lcd_16x4.h: 137: _delay((unsigned long)((5)*(2000000/4000.0)));
   998  0735  3004               	movlw	4
   999  0736  00F5               	movwf	??_Lcd_Init+1
  1000  0737  303D               	movlw	61
  1001  0738  00F4               	movwf	??_Lcd_Init
  1002  0739                     u297:
  1003  0739  0BF4               	decfsz	??_Lcd_Init,f
  1004  073A  2F39               	goto	u297
  1005  073B  0BF5               	decfsz	??_Lcd_Init+1,f
  1006  073C  2F39               	goto	u297
  1007  073D  2F3E               	nop2
  1008  073E                     l765:
  1009                           
  1010                           ;./lcd_16x4.h: 138:   Lcd_Cmd(0x03);
  1011  073E  3003               	movlw	3
  1012  073F  118A  263D  118A   	fcall	_Lcd_Cmd
  1013  0742                     l767:
  1014                           
  1015                           ;./lcd_16x4.h: 141:  _delay((unsigned long)((1)*(2000000/4000.0)));
  1016  0742  30A6               	movlw	166
  1017  0743  00F4               	movwf	??_Lcd_Init
  1018  0744                     u307:
  1019  0744  0BF4               	decfsz	??_Lcd_Init,f
  1020  0745  2F44               	goto	u307
  1021  0746  0000               	nop
  1022                           
  1023                           ;./lcd_16x4.h: 142:   Lcd_Cmd(0x03);
  1024  0747  3003               	movlw	3
  1025  0748  118A  263D  118A   	fcall	_Lcd_Cmd
  1026                           
  1027                           ;./lcd_16x4.h: 146:   Lcd_Cmd(0x02);
  1028  074B  3002               	movlw	2
  1029  074C  118A  263D  118A   	fcall	_Lcd_Cmd
  1030                           
  1031                           ;./lcd_16x4.h: 151:   Lcd_Cmd(0x02);
  1032  074F  3002               	movlw	2
  1033  0750  118A  263D  118A   	fcall	_Lcd_Cmd
  1034                           
  1035                           ;./lcd_16x4.h: 152:   Lcd_Cmd(0x08);
  1036  0753  3008               	movlw	8
  1037  0754  118A  263D  118A   	fcall	_Lcd_Cmd
  1038                           
  1039                           ;./lcd_16x4.h: 159:   Lcd_Cmd(0x00);
  1040  0757  3000               	movlw	0
  1041  0758  118A  263D  118A   	fcall	_Lcd_Cmd
  1042                           
  1043                           ;./lcd_16x4.h: 160:   Lcd_Cmd(0x0C);
  1044  075B  300C               	movlw	12
  1045  075C  118A  263D  118A   	fcall	_Lcd_Cmd
  1046                           
  1047                           ;./lcd_16x4.h: 167:   Lcd_Cmd(0x00);
  1048  075F  3000               	movlw	0
  1049  0760  118A  263D  118A   	fcall	_Lcd_Cmd
  1050                           
  1051                           ;./lcd_16x4.h: 168:   Lcd_Cmd(0x04);
  1052  0763  3004               	movlw	4
  1053  0764  118A  263D  118A   	fcall	_Lcd_Cmd
  1054  0767                     l56:
  1055  0767  0008               	return
  1056  0768                     __end_of_Lcd_Init:
  1057                           
  1058                           	psect	text5
  1059  0634                     __ptext5:	
  1060 ;; *************** function _Lcd_Clear *****************
  1061 ;; Defined at:
  1062 ;;		line 70 in file "./lcd_16x4.h"
  1063 ;; Parameters:    Size  Location     Type
  1064 ;;		None
  1065 ;; Auto vars:     Size  Location     Type
  1066 ;;		None
  1067 ;; Return value:  Size  Location     Type
  1068 ;;                  1    wreg      void 
  1069 ;; Registers used:
  1070 ;;		wreg, status,2, status,0, pclath, cstack
  1071 ;; Tracked objects:
  1072 ;;		On entry : 0/0
  1073 ;;		On exit  : 0/0
  1074 ;;		Unchanged: 0/0
  1075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1076 ;;      Params:         0       0       0       0       0
  1077 ;;      Locals:         0       0       0       0       0
  1078 ;;      Temps:          0       0       0       0       0
  1079 ;;      Totals:         0       0       0       0       0
  1080 ;;Total ram usage:        0 bytes
  1081 ;; Hardware stack levels used: 1
  1082 ;; Hardware stack levels required when called: 2
  1083 ;; This function calls:
  1084 ;;		_Lcd_Cmd
  1085 ;; This function is called by:
  1086 ;;		_main
  1087 ;; This function uses a non-reentrant model
  1088 ;;
  1089                           
  1090                           
  1091                           ;psect for function _Lcd_Clear
  1092  0634                     _Lcd_Clear:
  1093  0634                     l717:	
  1094                           ;incstack = 0
  1095                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1096                           
  1097                           
  1098                           ;./lcd_16x4.h: 73:  Lcd_Cmd(0);
  1099  0634  3000               	movlw	0
  1100  0635  118A  263D  118A   	fcall	_Lcd_Cmd
  1101                           
  1102                           ;./lcd_16x4.h: 74:  Lcd_Cmd(1);
  1103  0638  3001               	movlw	1
  1104  0639  118A  263D  118A   	fcall	_Lcd_Cmd
  1105  063C                     l43:
  1106  063C  0008               	return
  1107  063D                     __end_of_Lcd_Clear:
  1108                           
  1109                           	psect	text6
  1110  063D                     __ptext6:	
  1111 ;; *************** function _Lcd_Cmd *****************
  1112 ;; Defined at:
  1113 ;;		line 61 in file "./lcd_16x4.h"
  1114 ;; Parameters:    Size  Location     Type
  1115 ;;  a               1    wreg     unsigned char 
  1116 ;; Auto vars:     Size  Location     Type
  1117 ;;  a               1    3[COMMON] unsigned char 
  1118 ;; Return value:  Size  Location     Type
  1119 ;;                  1    wreg      void 
  1120 ;; Registers used:
  1121 ;;		wreg, status,2, status,0, pclath, cstack
  1122 ;; Tracked objects:
  1123 ;;		On entry : 0/0
  1124 ;;		On exit  : 0/0
  1125 ;;		Unchanged: 0/0
  1126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1127 ;;      Params:         0       0       0       0       0
  1128 ;;      Locals:         1       0       0       0       0
  1129 ;;      Temps:          2       0       0       0       0
  1130 ;;      Totals:         3       0       0       0       0
  1131 ;;Total ram usage:        3 bytes
  1132 ;; Hardware stack levels used: 1
  1133 ;; Hardware stack levels required when called: 1
  1134 ;; This function calls:
  1135 ;;		_Lcd_Port
  1136 ;; This function is called by:
  1137 ;;		_Lcd_Clear
  1138 ;;		_Lcd_Set_Cursor
  1139 ;;		_Lcd_Init
  1140 ;;		_Lcd_Shift_Right
  1141 ;;		_Lcd_Shift_Left
  1142 ;; This function uses a non-reentrant model
  1143 ;;
  1144                           
  1145                           
  1146                           ;psect for function _Lcd_Cmd
  1147  063D                     _Lcd_Cmd:
  1148                           
  1149                           ;incstack = 0
  1150                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1151                           ;Lcd_Cmd@a stored from wreg
  1152  063D  00F3               	movwf	Lcd_Cmd@a
  1153  063E                     l687:
  1154                           
  1155                           ;./lcd_16x4.h: 61: void Lcd_Cmd(char a);./lcd_16x4.h: 62: {;./lcd_16x4.h: 63:  RB1 = 0;
  1156  063E  1283               	bcf	3,5	;RP0=0, select bank0
  1157  063F  1303               	bcf	3,6	;RP1=0, select bank0
  1158  0640  1086               	bcf	6,1	;volatile
  1159  0641                     l689:
  1160                           
  1161                           ;./lcd_16x4.h: 64:  Lcd_Port(a);
  1162  0641  0873               	movf	Lcd_Cmd@a,w
  1163  0642  118A  268E  118A   	fcall	_Lcd_Port
  1164  0645                     l691:
  1165                           
  1166                           ;./lcd_16x4.h: 65:  RB2 = 1;
  1167  0645  1283               	bcf	3,5	;RP0=0, select bank0
  1168  0646  1303               	bcf	3,6	;RP1=0, select bank0
  1169  0647  1506               	bsf	6,2	;volatile
  1170  0648                     l693:
  1171                           
  1172                           ;./lcd_16x4.h: 66:         _delay((unsigned long)((4)*(2000000/4000.0)));
  1173  0648  3003               	movlw	3
  1174  0649  00F2               	movwf	??_Lcd_Cmd+1
  1175  064A  3097               	movlw	151
  1176  064B  00F1               	movwf	??_Lcd_Cmd
  1177  064C                     u317:
  1178  064C  0BF1               	decfsz	??_Lcd_Cmd,f
  1179  064D  2E4C               	goto	u317
  1180  064E  0BF2               	decfsz	??_Lcd_Cmd+1,f
  1181  064F  2E4C               	goto	u317
  1182  0650  2E51               	nop2
  1183  0651                     l695:
  1184                           
  1185                           ;./lcd_16x4.h: 67:         RB2 = 0;
  1186  0651  1283               	bcf	3,5	;RP0=0, select bank0
  1187  0652  1303               	bcf	3,6	;RP1=0, select bank0
  1188  0653  1106               	bcf	6,2	;volatile
  1189  0654                     l40:
  1190  0654  0008               	return
  1191  0655                     __end_of_Lcd_Cmd:
  1192                           
  1193                           	psect	text7
  1194  068E                     __ptext7:	
  1195 ;; *************** function _Lcd_Port *****************
  1196 ;; Defined at:
  1197 ;;		line 39 in file "./lcd_16x4.h"
  1198 ;; Parameters:    Size  Location     Type
  1199 ;;  a               1    wreg     unsigned char 
  1200 ;; Auto vars:     Size  Location     Type
  1201 ;;  a               1    0[COMMON] unsigned char 
  1202 ;; Return value:  Size  Location     Type
  1203 ;;                  1    wreg      void 
  1204 ;; Registers used:
  1205 ;;		wreg
  1206 ;; Tracked objects:
  1207 ;;		On entry : 0/0
  1208 ;;		On exit  : 0/0
  1209 ;;		Unchanged: 0/0
  1210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1211 ;;      Params:         0       0       0       0       0
  1212 ;;      Locals:         1       0       0       0       0
  1213 ;;      Temps:          0       0       0       0       0
  1214 ;;      Totals:         1       0       0       0       0
  1215 ;;Total ram usage:        1 bytes
  1216 ;; Hardware stack levels used: 1
  1217 ;; This function calls:
  1218 ;;		Nothing
  1219 ;; This function is called by:
  1220 ;;		_Lcd_Cmd
  1221 ;;		_Lcd_Init
  1222 ;;		_Lcd_Write_Char
  1223 ;; This function uses a non-reentrant model
  1224 ;;
  1225                           
  1226                           
  1227                           ;psect for function _Lcd_Port
  1228  068E                     _Lcd_Port:
  1229                           
  1230                           ;incstack = 0
  1231                           ; Regs used in _Lcd_Port: [wreg]
  1232                           ;Lcd_Port@a stored from wreg
  1233  068E  00F0               	movwf	Lcd_Port@a
  1234  068F                     l677:
  1235                           
  1236                           ;./lcd_16x4.h: 39: void Lcd_Port(char a);./lcd_16x4.h: 40: {;./lcd_16x4.h: 41:  if(a & 1
      +                          )
  1237  068F  1C70               	btfss	Lcd_Port@a,0
  1238  0690  2E92               	goto	u11
  1239  0691  2E93               	goto	u10
  1240  0692                     u11:
  1241  0692  2E97               	goto	l29
  1242  0693                     u10:
  1243  0693                     l679:
  1244                           
  1245                           ;./lcd_16x4.h: 42:   RB3 = 1;
  1246  0693  1283               	bcf	3,5	;RP0=0, select bank0
  1247  0694  1303               	bcf	3,6	;RP1=0, select bank0
  1248  0695  1586               	bsf	6,3	;volatile
  1249  0696  2E9A               	goto	l30
  1250  0697                     l29:	
  1251                           ;./lcd_16x4.h: 43:  else
  1252                           
  1253                           
  1254                           ;./lcd_16x4.h: 44:   RB3 = 0;
  1255  0697  1283               	bcf	3,5	;RP0=0, select bank0
  1256  0698  1303               	bcf	3,6	;RP1=0, select bank0
  1257  0699  1186               	bcf	6,3	;volatile
  1258  069A                     l30:
  1259                           
  1260                           ;./lcd_16x4.h: 46:  if(a & 2)
  1261  069A  1CF0               	btfss	Lcd_Port@a,1
  1262  069B  2E9D               	goto	u21
  1263  069C  2E9E               	goto	u20
  1264  069D                     u21:
  1265  069D  2EA0               	goto	l31
  1266  069E                     u20:
  1267  069E                     l681:
  1268                           
  1269                           ;./lcd_16x4.h: 47:   RB4 = 1;
  1270  069E  1606               	bsf	6,4	;volatile
  1271  069F  2EA1               	goto	l32
  1272  06A0                     l31:	
  1273                           ;./lcd_16x4.h: 48:  else
  1274                           
  1275                           
  1276                           ;./lcd_16x4.h: 49:   RB4 = 0;
  1277  06A0  1206               	bcf	6,4	;volatile
  1278  06A1                     l32:
  1279                           
  1280                           ;./lcd_16x4.h: 51:  if(a & 4)
  1281  06A1  1D70               	btfss	Lcd_Port@a,2
  1282  06A2  2EA4               	goto	u31
  1283  06A3  2EA5               	goto	u30
  1284  06A4                     u31:
  1285  06A4  2EA7               	goto	l33
  1286  06A5                     u30:
  1287  06A5                     l683:
  1288                           
  1289                           ;./lcd_16x4.h: 52:   RB5 = 1;
  1290  06A5  1686               	bsf	6,5	;volatile
  1291  06A6  2EA8               	goto	l34
  1292  06A7                     l33:	
  1293                           ;./lcd_16x4.h: 53:  else
  1294                           
  1295                           
  1296                           ;./lcd_16x4.h: 54:   RB5 = 0;
  1297  06A7  1286               	bcf	6,5	;volatile
  1298  06A8                     l34:
  1299                           
  1300                           ;./lcd_16x4.h: 56:  if(a & 8)
  1301  06A8  1DF0               	btfss	Lcd_Port@a,3
  1302  06A9  2EAB               	goto	u41
  1303  06AA  2EAC               	goto	u40
  1304  06AB                     u41:
  1305  06AB  2EAE               	goto	l35
  1306  06AC                     u40:
  1307  06AC                     l685:
  1308                           
  1309                           ;./lcd_16x4.h: 57:   RB6 = 1;
  1310  06AC  1706               	bsf	6,6	;volatile
  1311  06AD  2EAF               	goto	l37
  1312  06AE                     l35:	
  1313                           ;./lcd_16x4.h: 58:  else
  1314                           
  1315                           
  1316                           ;./lcd_16x4.h: 59:   RB6 = 0;
  1317  06AE  1306               	bcf	6,6	;volatile
  1318  06AF                     l37:
  1319  06AF  0008               	return
  1320  06B0                     __end_of_Lcd_Port:
  1321                           
  1322                           	psect	text8
  1323  0655                     __ptext8:	
  1324 ;; *************** function _ConfigPorts *****************
  1325 ;; Defined at:
  1326 ;;		line 54 in file "main.c"
  1327 ;; Parameters:    Size  Location     Type
  1328 ;;		None
  1329 ;; Auto vars:     Size  Location     Type
  1330 ;;		None
  1331 ;; Return value:  Size  Location     Type
  1332 ;;                  1    wreg      void 
  1333 ;; Registers used:
  1334 ;;		status,2
  1335 ;; Tracked objects:
  1336 ;;		On entry : 0/0
  1337 ;;		On exit  : 0/0
  1338 ;;		Unchanged: 0/0
  1339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1340 ;;      Params:         0       0       0       0       0
  1341 ;;      Locals:         0       0       0       0       0
  1342 ;;      Temps:          0       0       0       0       0
  1343 ;;      Totals:         0       0       0       0       0
  1344 ;;Total ram usage:        0 bytes
  1345 ;; Hardware stack levels used: 1
  1346 ;; This function calls:
  1347 ;;		Nothing
  1348 ;; This function is called by:
  1349 ;;		_main
  1350 ;; This function uses a non-reentrant model
  1351 ;;
  1352                           
  1353                           
  1354                           ;psect for function _ConfigPorts
  1355  0655                     _ConfigPorts:
  1356  0655                     l779:	
  1357                           ;incstack = 0
  1358                           ; Regs used in _ConfigPorts: [status,2]
  1359                           
  1360                           
  1361                           ;main.c: 56:     ANSEL = 0x00;
  1362  0655  1683               	bsf	3,5	;RP0=1, select bank1
  1363  0656  1303               	bcf	3,6	;RP1=0, select bank1
  1364  0657  019B               	clrf	27	;volatile
  1365                           
  1366                           ;main.c: 57:     PORTA = 0x00;
  1367  0658  1283               	bcf	3,5	;RP0=0, select bank0
  1368  0659  1303               	bcf	3,6	;RP1=0, select bank0
  1369  065A  0185               	clrf	5	;volatile
  1370                           
  1371                           ;main.c: 58:     PORTB = 0x00;
  1372  065B  0186               	clrf	6	;volatile
  1373  065C                     l781:
  1374                           
  1375                           ;main.c: 60:     TRISAbits.TRISA0 = 0b1;
  1376  065C  1683               	bsf	3,5	;RP0=1, select bank1
  1377  065D  1303               	bcf	3,6	;RP1=0, select bank1
  1378  065E  1405               	bsf	5,0	;volatile
  1379  065F                     l783:
  1380                           
  1381                           ;main.c: 61:     TRISAbits.TRISA1 = 0b1;
  1382  065F  1485               	bsf	5,1	;volatile
  1383  0660                     l785:
  1384                           
  1385                           ;main.c: 62:     TRISAbits.TRISA2 = 0b0;
  1386  0660  1105               	bcf	5,2	;volatile
  1387  0661                     l787:
  1388                           
  1389                           ;main.c: 63:     TRISAbits.TRISA3 = 0b0;
  1390  0661  1185               	bcf	5,3	;volatile
  1391  0662                     l789:
  1392                           
  1393                           ;main.c: 64:     TRISAbits.TRISA4 = 0b0;
  1394  0662  1205               	bcf	5,4	;volatile
  1395  0663                     l791:
  1396                           
  1397                           ;main.c: 65:     TRISAbits.TRISA5 = 0b1;
  1398  0663  1685               	bsf	5,5	;volatile
  1399  0664                     l793:
  1400                           
  1401                           ;main.c: 66:     TRISAbits.TRISA6 = 0b1;
  1402  0664  1705               	bsf	5,6	;volatile
  1403  0665                     l795:
  1404                           
  1405                           ;main.c: 67:     TRISAbits.TRISA7 = 0b1;
  1406  0665  1785               	bsf	5,7	;volatile
  1407  0666                     l797:
  1408                           
  1409                           ;main.c: 69:     TRISBbits.TRISB0 = 0b1;
  1410  0666  1406               	bsf	6,0	;volatile
  1411  0667                     l799:
  1412                           
  1413                           ;main.c: 70:     TRISBbits.TRISB1 = 0b0;
  1414  0667  1086               	bcf	6,1	;volatile
  1415  0668                     l801:
  1416                           
  1417                           ;main.c: 71:     TRISBbits.TRISB2 = 0b0;
  1418  0668  1106               	bcf	6,2	;volatile
  1419  0669                     l803:
  1420                           
  1421                           ;main.c: 72:     TRISBbits.TRISB3 = 0b0;
  1422  0669  1186               	bcf	6,3	;volatile
  1423  066A                     l805:
  1424                           
  1425                           ;main.c: 73:     TRISBbits.TRISB4 = 0b0;
  1426  066A  1206               	bcf	6,4	;volatile
  1427  066B                     l807:
  1428                           
  1429                           ;main.c: 74:     TRISBbits.TRISB5 = 0b0;
  1430  066B  1286               	bcf	6,5	;volatile
  1431  066C                     l809:
  1432                           
  1433                           ;main.c: 75:     TRISBbits.TRISB6 = 0b0;
  1434  066C  1306               	bcf	6,6	;volatile
  1435  066D                     l811:
  1436                           
  1437                           ;main.c: 76:     TRISBbits.TRISB7 = 0b1;
  1438  066D  1786               	bsf	6,7	;volatile
  1439  066E                     l77:
  1440  066E  0008               	return
  1441  066F                     __end_of_ConfigPorts:
  1442                           
  1443                           	psect	text9
  1444  062D                     __ptext9:	
  1445 ;; *************** function _ConfigOscillator *****************
  1446 ;; Defined at:
  1447 ;;		line 43 in file "main.c"
  1448 ;; Parameters:    Size  Location     Type
  1449 ;;		None
  1450 ;; Auto vars:     Size  Location     Type
  1451 ;;		None
  1452 ;; Return value:  Size  Location     Type
  1453 ;;                  1    wreg      void 
  1454 ;; Registers used:
  1455 ;;		wreg, status,2, status,0
  1456 ;; Tracked objects:
  1457 ;;		On entry : 0/0
  1458 ;;		On exit  : 0/0
  1459 ;;		Unchanged: 0/0
  1460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1461 ;;      Params:         0       0       0       0       0
  1462 ;;      Locals:         0       0       0       0       0
  1463 ;;      Temps:          0       0       0       0       0
  1464 ;;      Totals:         0       0       0       0       0
  1465 ;;Total ram usage:        0 bytes
  1466 ;; Hardware stack levels used: 1
  1467 ;; This function calls:
  1468 ;;		Nothing
  1469 ;; This function is called by:
  1470 ;;		_main
  1471 ;; This function uses a non-reentrant model
  1472 ;;
  1473                           
  1474                           
  1475                           ;psect for function _ConfigOscillator
  1476  062D                     _ConfigOscillator:
  1477  062D                     l777:	
  1478                           ;incstack = 0
  1479                           ; Regs used in _ConfigOscillator: [wreg+status,2+status,0]
  1480                           
  1481                           
  1482                           ;main.c: 45:     OSCCONbits.IRCF = 0b111;
  1483  062D  3070               	movlw	112
  1484  062E  1683               	bsf	3,5	;RP0=1, select bank1
  1485  062F  1303               	bcf	3,6	;RP1=0, select bank1
  1486  0630  048F               	iorwf	15,f	;volatile
  1487                           
  1488                           ;main.c: 46:     OSCCONbits.SCS = 0b00;
  1489  0631  30FC               	movlw	-4
  1490  0632  058F               	andwf	15,f	;volatile
  1491  0633                     l74:
  1492  0633  0008               	return
  1493  0634                     __end_of_ConfigOscillator:
  1494  007E                     btemp	set	126	;btemp
  1495  007E                     wtemp0	set	126
  1496                           
  1497                           	psect	config
  1498                           
  1499                           ;Config register CONFIG1 @ 0x2007
  1500                           ;	Oscillator Selection bits
  1501                           ;	FOSC = INTOSCIO, INTRC oscillator; port I/O function on both RA6/OSC2/CLKO pin and RA7
      +                          /OSC1/CLKI pin
  1502                           ;	Watchdog Timer Enable bit
  1503                           ;	WDTE = OFF, WDT disabled
  1504                           ;	Power-up Timer Enable bit
  1505                           ;	PWRTE = ON, PWRT enabled
  1506                           ;	RA5/MCLR/VPP Pin Function Select bit
  1507                           ;	MCLRE = OFF, RA5/MCLR/VPP pin function is digital I/O, MCLR internally tied to VDD
  1508                           ;	Brown-out Reset Enable bit
  1509                           ;	BOREN = ON, BOR enabled
  1510                           ;	Low-Voltage Programming Enable bit
  1511                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1512                           ;	Data EE Memory Code Protection bit
  1513                           ;	CPD = OFF, Code protection off
  1514                           ;	Flash Program Memory Write Enable bits
  1515                           ;	WRT = OFF, Write protection off
  1516                           ;	In-Circuit Debugger Mode bit
  1517                           ;	DEBUG = 0x1, unprogrammed default
  1518                           ;	CCP1 Pin Selection bit
  1519                           ;	CCPMX = RB0, CCP1 function on RB0
  1520                           ;	Flash Program Memory Code Protection bit
  1521                           ;	CP = OFF, Code protection off
  1522  2007                     	org	8199
  1523  2007  3F50               	dw	16208
  1524                           
  1525                           ;Config register CONFIG2 @ 0x2008
  1526                           ;	Fail-Safe Clock Monitor Enable bit
  1527                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1528                           ;	Internal External Switchover bit
  1529                           ;	IESO = OFF, Internal External Switchover mode disabled
  1530  2008                     	org	8200
  1531  2008  3FFC               	dw	16380

Data Sizes:
    Strings     22
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 11
		 -> STR_2(CODE[11]), STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1253
                                             11 COMMON     3     3      0
                   _ConfigOscillator
                        _ConfigPorts
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     276
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     120
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     767
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     135
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      75
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      75
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      60
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigPorts                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigOscillator                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigOscillator
   _ConfigPorts
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Aug 08 23:18:24 2021

                        pc 0002                         l30 069A                         l31 06A0  
                       l32 06A1                         l40 0654                         l33 06A7  
                       l34 06A8                         l35 06AE                         l43 063C  
                       l37 06AF                         l29 0697                         l53 07FC  
                       l56 0767                         l49 07FC                         l65 068D  
                       l74 0633                         l82 0721                         l59 06E4  
                       l83 0721                         l77 066E                         u10 0693  
                       u11 0692                         u20 069E                         u21 069D  
                       u30 06A5                         u31 06A4                         u40 06AC  
                       u41 06AB                         u55 06C1                         fsr 0004  
                      l701 06BE                        l711 06D9                        l703 06CA  
                      l801 0668                        l713 06DC                        l705 06CD  
                      l811 066D                        l803 0669                        l715 06E1  
                      l707 06D2                        l805 066A                        l717 0634  
                      l709 06D5                        l807 066B                        l809 066C  
                      l681 069E                        l761 0728                        l841 0784  
                      l683 06A5                        l691 0645                        l763 0731  
                      l851 07A9                        l843 0788                        l835 0769  
                      l781 065C                        l685 06AC                        l677 068F  
                      l693 0648                        l765 073E                        l861 07CE  
                      l853 07AD                        l837 076E                        l845 078D  
                      l791 0663                        l783 065F                        l679 0693  
                      l695 0651                        l687 063E                        l767 0742  
                      l759 0724                        l871 07F3                        l863 07D2  
                      l847 0793                        l855 07B2                        l839 077F  
                      l777 062D                        l793 0664                        l785 0660  
                      l689 0641                        l873 07F7                        l857 07B8  
                      l865 07D7                        l849 07A4                        l697 06B1  
                      l881 0682                        l795 0665                        l787 0661  
                      l779 0655                        l867 07DD                        l859 07C9  
                      l699 06BB                        l875 0670                        l891 06F1  
                      l883 06E5                        l797 0666                        l789 0662  
                      l869 07EE                        l877 0673                        l893 06F7  
                      l885 06E8                        l799 0667                        l879 067C  
                      l895 06FB                        l887 06EB                        l897 0708  
                      l889 06EE                        l899 0714                        _RB1 0031  
                      _RB2 0032                        _RB3 0033                        _RB4 0034  
                      _RB5 0035                        _RB6 0036                        u210 07DD  
                      u211 07DC                        u205 07C0                        u150 076E  
                      u230 068D                        u151 076D                        u231 068C  
                      u225 07E5                        u170 0793                        u307 0744  
                      u171 0792                        u317 064C                        u165 0776  
                      u190 07B8                        u191 07B7                        u247 0701  
                      u185 079B                        u257 071A                        u267 06CF  
                      u277 06DE                        u287 072C                        u297 0739  
                      fsr0 0004                       STR_1 0008                       STR_2 0013  
        ?_Lcd_Write_String 0070                       _main 06E5                       btemp 007E  
                     start 0000         ??_Lcd_Write_String 0075            __end_of_Lcd_Cmd 0655  
      __end_of_ConfigPorts 066F                      ?_main 0070                      _ANSEL 009B  
                    _PORTA 0005                      _PORTB 0006    __size_of_Lcd_Set_Cursor 0095  
                    pclath 000A                      status 0003                      wtemp0 007E  
         __end_of_Lcd_Init 0768           __end_of_Lcd_Port 06B0            __initialization 07FD  
             __end_of_main 0724                     ??_main 007B         __size_of_Lcd_Clear 0009  
                ??_Lcd_Cmd 0071    __size_of_Lcd_Write_Char 0035                _ConfigPorts 0655  
 __end_of_ConfigOscillator 0634            Lcd_Set_Cursor@a 0074            Lcd_Set_Cursor@b 0077  
          Lcd_Set_Cursor@y 0079            Lcd_Set_Cursor@z 0078    __end_of__initialization 07FD  
        __end_of_Lcd_Clear 063D             __pcstackCOMMON 0070             _Lcd_Set_Cursor 0768  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070                 __pmaintext 06E5  
__size_of_Lcd_Write_String 001F     __end_of_Lcd_Set_Cursor 07FD                 ??_Lcd_Init 0074  
               ??_Lcd_Port 0070                 __stringtab 0002             _Lcd_Write_Char 06B0  
                  _Lcd_Cmd 063D            ?_Lcd_Set_Cursor 0074                    __ptext1 066F  
                  __ptext2 06B0                    __ptext3 0768                    __ptext4 0724  
                  __ptext5 0634                    __ptext6 063D                    __ptext7 068E  
                  __ptext8 0655                    __ptext9 062D     __end_of_Lcd_Write_Char 06E5  
     end_of_initialization 07FD               ?_ConfigPorts 0070          ?_ConfigOscillator 0070  
                Lcd_Port@a 0070         ??_ConfigOscillator 0070                  _TRISAbits 0085  
                _TRISBbits 0086            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0077  
        Lcd_Write_String@i 0075                  _Lcd_Clear 0634           _Lcd_Write_String 066F  
      start_initialization 07FD          __size_of_Lcd_Init 0044          __size_of_Lcd_Port 0022  
               ?_Lcd_Clear 0070            Lcd_Write_Char@a 0074            Lcd_Write_Char@y 0073  
                ___latbits 0001                   ?_Lcd_Cmd 0070       __size_of_ConfigPorts 001A  
         ??_Lcd_Set_Cursor 0075                  __pstrings 0002                   Lcd_Cmd@a 0073  
              ??_Lcd_Clear 0074                __stringbase 0007           ??_Lcd_Write_Char 0071  
__size_of_ConfigOscillator 0007                   _Lcd_Init 0724                   _Lcd_Port 068E  
 __end_of_Lcd_Write_String 068E           __size_of_Lcd_Cmd 0018         __end_of__stringtab 0008  
            __size_of_main 003F         Lcd_Write_Char@temp 0072                  stringcode 0002  
               _OSCCONbits 008F         Lcd_Set_Cursor@temp 007A                   stringdir 0002  
                 stringtab 0002           _ConfigOscillator 062D              ??_ConfigPorts 0070  
